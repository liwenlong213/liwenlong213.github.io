<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>防抖 节流</title>
    <url>/2020/09/28/%E9%98%B2%E6%8A%96%20%E8%8A%82%E6%B5%81/</url>
    <content><![CDATA[<p>摘要：防抖 节流通用方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 节流</span></span><br><span class="line"> throttle(fn, delay = <span class="number">500</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.throttleTimer) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.throttleTimer = setTimeout(<span class="function">(<span class="params">...res</span>) =&gt;</span> &#123;</span><br><span class="line">      fn.apply(<span class="keyword">this</span>, [...res])</span><br><span class="line">      <span class="keyword">this</span>.throttleTimer = <span class="literal">null</span></span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 防抖</span></span><br><span class="line">debounce(fn, delay = <span class="number">500</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.debounceTimer) &#123;</span><br><span class="line">      clearTimeout(<span class="keyword">this</span>.debounceTimer)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.debounceTimer = setTimeout(<span class="function">(<span class="params">...res</span>) =&gt;</span> &#123;</span><br><span class="line">      fn.apply(<span class="keyword">this</span>, [...res])</span><br><span class="line">      <span class="keyword">this</span>.debounceTimer = <span class="literal">null</span></span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>js map方法处理接口返回数据，获取指定数据简写方法</title>
    <url>/2020/08/27/js%20map%E6%96%B9%E6%B3%95%E5%A4%84%E7%90%86%E6%8E%A5%E5%8F%A3%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E6%95%B0%E6%8D%AE%E7%AE%80%E5%86%99%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>摘要：接口返回数据为数组列表时，通常比较全面，包含了很多不需要的数据，可以通过 map 方法处理返回数据，筛选出想要的数据</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>接口返回数据为数组列表时，通常比较全面，包含了很多不需要的数据，可以通过 map 方法处理返回数据，筛选出想要的数据</p>
<blockquote>
<p>例如</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 接口返回数据</span></span><br><span class="line">res = [&#123;</span><br><span class="line">  id: <span class="number">1</span>,</span><br><span class="line">  name: <span class="string">'zhangsan'</span>,</span><br><span class="line">  age: <span class="number">16</span>,</span><br><span class="line">  gender: <span class="number">0</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  id: <span class="number">2</span>,</span><br><span class="line">  name: <span class="string">'lisi'</span>,</span><br><span class="line">  age: <span class="number">20</span>,</span><br><span class="line">  gender: <span class="number">1</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p>如果只想获取 res 每项中的 id 和 name</p>
<blockquote>
<p>即为</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理后的数据</span></span><br><span class="line">data = [&#123;</span><br><span class="line">  id: <span class="number">1</span>,</span><br><span class="line">  name: <span class="string">'zhangsan'</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  id: <span class="number">2</span>,</span><br><span class="line">  name: <span class="string">'lisi'</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p>最简单的方法就是 for 循环遍历，本文不讲 for 循环，讲一下 map 的简单写法</p>
<h3 id="进入正题（敲黑板！！！）"><a href="#进入正题（敲黑板！！！）" class="headerlink" title="进入正题（敲黑板！！！）"></a>进入正题（敲黑板！！！）</h3><p>下面统一按照上述的 res 数据为例子</p>
<blockquote>
<p>首先从 map 最简单的方式实现 data</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function"><span class="keyword">function</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    id: item.id,</span><br><span class="line">    name: item.name</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<blockquote>
<p>当然可以使用 ES6 箭头函数简化</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function"><span class="params">item</span> =&gt;</span> (&#123; <span class="attr">id</span>: item.id, <span class="attr">name</span>: item.name &#125;))</span><br></pre></td></tr></table></figure>

<p><strong>注意：这里需要注意的是使用箭头函数返回一个对象时不能直接去写 {} ，要在对象后面加上括号 ({})，防止和函数后面的大括号冲突而报错</strong></p>
<p>上面是正常的写法，利用 ES6 解构赋值，还可以简写为如下</p>
<blockquote>
<p>骚操作来了</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function">(<span class="params">&#123; id, name &#125;</span>) =&gt;</span> (&#123; id, name &#125;))</span><br></pre></td></tr></table></figure>

<p>怎么样，是不是变得非常简洁，但是会有一部分同学在这里懵逼了，不要着急，往下看</p>
<p>其实真正理解起来也不难，从上述简单的方式来看，箭头函数前面的参数 ({id, name}) 实际上是把 item 解构成了两个变量，其中这两个变量是 item 中存在的，即为 id, name ，然后后面是返回了一个对象，就可以用前面两个解构出来的变量了，由于 key 和 value 一样，所以写成了对象的简写方式</p>
<p>但是这种只适用于 key 值一样的情况，如果想换 data 的 key 值怎么办呢</p>
<blockquote>
<p>例如想让处理后的 data 的 id 变为 code</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 处理后的数据</span></span><br><span class="line">data = [&#123;</span><br><span class="line">  code: <span class="number">1</span>,</span><br><span class="line">  name: <span class="string">'zhangsan'</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  code: <span class="number">2</span>,</span><br><span class="line">  name: <span class="string">'lisi'</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p>聪明的同学已经懂了，这个时候只需要操作后面返回的数据即可</p>
<blockquote>
<p>即为</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function">(<span class="params">&#123; id, name &#125;</span>) =&gt;</span> (&#123; <span class="attr">code</span>: id, name &#125;))</span><br></pre></td></tr></table></figure>

<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>上述方法已经基本满足日常使用，当然，如果参数的名字过长也可以取个别名</p>
<blockquote>
<p>例如 res 改为</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 接口返回数据</span></span><br><span class="line">res = [&#123;</span><br><span class="line">  id: <span class="number">1</span>,</span><br><span class="line">  classAndSchoolName: <span class="string">'zhangsan'</span>,</span><br><span class="line">  age: <span class="number">16</span>,</span><br><span class="line">  gender: <span class="number">0</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">  id: <span class="number">2</span>,</span><br><span class="line">  classAndSchoolName: <span class="string">'lisi'</span>,</span><br><span class="line">  age: <span class="number">20</span>,</span><br><span class="line">  gender: <span class="number">1</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p>此时若是按照上面的写法名字显然太长了</p>
<blockquote>
<p>即为</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function">(<span class="params">&#123; id, classAndSchoolName &#125;</span>) =&gt;</span> (&#123; <span class="attr">code</span>: id, classAndSchoolName &#125;))</span><br></pre></td></tr></table></figure>

<p>这时候可以在参数部分重命名（ 感觉像是在脱了裤子放屁，但是确实短了一点🌚  ）</p>
<blockquote>
<p>即为</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> data = res.map(<span class="function">(<span class="params">&#123; id, classAndSchoolName: name &#125;</span>) =&gt;</span> (&#123; <span class="attr">code</span>: id, name &#125;))</span><br></pre></td></tr></table></figure>

<p>此时可能又有同学懵逼了，为啥前面参数重命名的变量写在冒号后面呢？</p>
<p>这其实是两个概念，前面参数是解构赋值的重命名方法，name 为重命名的值，后面返回的对象只是对象简写方法换成正常写法而已</p>
<p>完结撒花 🎉，如有变动后续更新</p>
<p>2020-08-27 上午</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>element-ui 日期选择器-开始结束日期选择限制</title>
    <url>/2020/08/18/element-ui%20%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E5%99%A8-%E5%BC%80%E5%A7%8B%E7%BB%93%E6%9D%9F%E6%97%A5%E6%9C%9F%E9%80%89%E6%8B%A9%E9%99%90%E5%88%B6/</url>
    <content><![CDATA[<p>摘要：element-ui 日期选择器-开始结束日期选择限制</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><blockquote>
<p>最简洁代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 我的卷库-组件-内容头部</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=<span class="string">"startDate"</span></span><br><span class="line">      type=<span class="string">"date"</span></span><br><span class="line">      placeholder=<span class="string">"开始日期"</span></span><br><span class="line">      :picker-options=<span class="string">"pickerOptionsStart"</span></span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;span&gt;至&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-date-picker</span></span><br><span class="line"><span class="regexp">      v-model="endDate"</span></span><br><span class="line"><span class="regexp">      type="date"</span></span><br><span class="line"><span class="regexp">      placeholder="结束日期"</span></span><br><span class="line"><span class="regexp">      :picker-options="pickerOptionsEnd"</span></span><br><span class="line"><span class="regexp">    /</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      startDate: <span class="string">''</span>,</span><br><span class="line">      endDate: <span class="string">''</span>,</span><br><span class="line">      <span class="comment">// 开始结束日期限制</span></span><br><span class="line">      pickerOptionsStart: &#123;</span><br><span class="line">        disabledDate: <span class="function"><span class="params">time</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.endDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &gt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.endDate).getTime()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      pickerOptionsEnd: &#123;</span><br><span class="line">        disabledDate: <span class="function"><span class="params">time</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.startDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &lt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.startDate).getTime() - <span class="number">86400000</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img src="https://www.pianshen.com/images/565/43451e3750b304eda10e7f70f1961da5.gif" alt="date"></p>
<p>[原文链接](### 代码</p>
<blockquote>
<p>最简洁代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 我的卷库-组件-内容头部</span></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-date-picker</span><br><span class="line">      v-model=<span class="string">"startDate"</span></span><br><span class="line">      type=<span class="string">"date"</span></span><br><span class="line">      placeholder=<span class="string">"开始日期"</span></span><br><span class="line">      :picker-options=<span class="string">"pickerOptionsStart"</span></span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;span&gt;至&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;el-date-picker</span></span><br><span class="line"><span class="regexp">      v-model="endDate"</span></span><br><span class="line"><span class="regexp">      type="date"</span></span><br><span class="line"><span class="regexp">      placeholder="结束日期"</span></span><br><span class="line"><span class="regexp">      :picker-options="pickerOptionsEnd"</span></span><br><span class="line"><span class="regexp">    /</span>&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      startDate: <span class="string">''</span>,</span><br><span class="line">      endDate: <span class="string">''</span>,</span><br><span class="line">      <span class="comment">// 开始结束日期限制</span></span><br><span class="line">      pickerOptionsStart: &#123;</span><br><span class="line">        disabledDate: <span class="function"><span class="params">time</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.endDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &gt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.endDate).getTime()</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      pickerOptionsEnd: &#123;</span><br><span class="line">        disabledDate: <span class="function"><span class="params">time</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (<span class="keyword">this</span>.startDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> time.getTime() &lt; <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="keyword">this</span>.startDate).getTime() - <span class="number">86400000</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="图示-1"><a href="#图示-1" class="headerlink" title="图示"></a>图示</h3><p><img src="https://www.pianshen.com/images/565/43451e3750b304eda10e7f70f1961da5.gif" alt="date"></p>
<p><a href="https://www.cnblogs.com/langxiyu/p/11076289.html" target="_blank" rel="noopener">原文链接</a></p>
]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue elment-ui 对navTab导航组件封装</title>
    <url>/2020/08/14/vue%20elment-ui%20%E5%AF%B9navTab%E5%AF%BC%E8%88%AA%E7%BB%84%E4%BB%B6%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<p>摘要：vue elment-ui 对navTab导航组件封装</p>
<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><p><img src="http://lwlblog.gitee.io/img/blog/nav-tab1.png" alt="nav-tab1"><br><img src="http://lwlblog.gitee.io/img/blog/nav-tab2.png" alt="nav-tab2"></p>
<h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><blockquote>
<p>代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav-tab-wrap"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav-list"</span>&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-<span class="keyword">for</span>=<span class="string">"(item, index) in navList"</span></span><br><span class="line">        :key=<span class="string">"item"</span></span><br><span class="line">        <span class="class"><span class="keyword">class</span></span>=<span class="string">"nav-item"</span></span><br><span class="line">        :<span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123;'active': currentTab === index&#125;"</span></span><br><span class="line">        @click=<span class="string">"handleCurrentTab(index)"</span></span><br><span class="line">      &gt;&#123;&#123; item &#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">      &lt;!-- 下拉菜单类型导航 --&gt;</span></span><br><span class="line"><span class="regexp">      &lt;el-dropdown</span></span><br><span class="line"><span class="regexp">        v-for="(item, index) in navDropList"</span></span><br><span class="line"><span class="regexp">        :key="item.title"</span></span><br><span class="line"><span class="regexp">        class="nav-item"</span></span><br><span class="line"><span class="regexp">        :class="&#123;'active': isActive(index)&#125;"</span></span><br><span class="line"><span class="regexp">        @command="handleCurrentTab($event, index)"</span></span><br><span class="line"><span class="regexp">      &gt;</span></span><br><span class="line"><span class="regexp">        &lt;!-- 菜单标题 --&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class="el-dropdown-link"&gt;</span></span><br><span class="line"><span class="regexp">          &#123;&#123; isActive(index) ? list[currentTab] : item.title &#125;&#125;</span></span><br><span class="line"><span class="regexp">          &lt;i class="el-icon-arrow-down el-icon--right" /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;!-- 菜单项 --&gt;</span></span><br><span class="line"><span class="regexp">        &lt;el-dropdown-menu slot="dropdown"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;el-dropdown-item</span></span><br><span class="line"><span class="regexp">            v-for="(v, i) in item.list"</span></span><br><span class="line"><span class="regexp">            :key="v"</span></span><br><span class="line"><span class="regexp">            :command="i + navList.length"</span></span><br><span class="line"><span class="regexp">          &gt;&#123;&#123; v &#125;&#125;&lt;/</span>el-dropdown-item&gt;</span><br><span class="line">        &lt;<span class="regexp">/el-dropdown-menu&gt;</span></span><br><span class="line"><span class="regexp">      &lt;/</span>el-dropdown&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/  其他代码......</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  props: &#123;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 当前的tab</span></span><br><span class="line"><span class="regexp">    currentTab: &#123;</span></span><br><span class="line"><span class="regexp">      type: Number,</span></span><br><span class="line"><span class="regexp">      default: 0</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 导航标签</span></span><br><span class="line"><span class="regexp">    navList: &#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default: () =&gt; []</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 下拉菜单</span></span><br><span class="line"><span class="regexp">    navDropList: &#123;</span></span><br><span class="line"><span class="regexp">      type: Array,</span></span><br><span class="line"><span class="regexp">      default: () =&gt; []</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;</span></span><br><span class="line"><span class="regexp">      list: this.navList</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  created() &#123;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 合并标题</span></span><br><span class="line"><span class="regexp">    this.navDropList.forEach(v =&gt; &#123;</span></span><br><span class="line"><span class="regexp">      this.list = [...this.list, ...v.list]</span></span><br><span class="line"><span class="regexp">    &#125;)</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 改变当前tab</span></span><br><span class="line"><span class="regexp">    handleCurrentTab(index, step) &#123;</span></span><br><span class="line"><span class="regexp">      let value = index</span></span><br><span class="line"><span class="regexp">      for (let i = 0; i &lt; step; i++) &#123;</span></span><br><span class="line"><span class="regexp">        value += this.navDropList[i].list.length</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      this.$emit('handleCurrentTab', value)</span></span><br><span class="line"><span class="regexp">    &#125;,</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/ 是否选中菜单标题</span></span><br><span class="line"><span class="regexp">    isActive(step) &#123;</span></span><br><span class="line"><span class="regexp">      let minLen = 0</span></span><br><span class="line"><span class="regexp">      let maxLen = this.navList.length</span></span><br><span class="line"><span class="regexp">      for (let i = 0; i &lt; step + 1; i++) &#123;</span></span><br><span class="line"><span class="regexp">        minLen = maxLen</span></span><br><span class="line"><span class="regexp">        maxLen += this.navDropList[i].list.length</span></span><br><span class="line"><span class="regexp">      &#125;</span></span><br><span class="line"><span class="regexp">      return this.currentTab &gt;= minLen &amp;&amp; this.currentTab &lt; maxLen</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=<span class="string">"less"</span> scoped&gt;</span><br><span class="line">@<span class="keyword">import</span> <span class="string">'~assets/less/variable.less'</span>;</span><br><span class="line">.nav-tab-wrap&#123;</span><br><span class="line">  height: <span class="number">62</span>px;</span><br><span class="line">  margin: <span class="number">0</span> <span class="number">24</span>px;</span><br><span class="line">  padding: <span class="number">0</span> <span class="number">24</span>px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  border-radius: <span class="number">0</span> <span class="number">0</span> <span class="number">4</span>px <span class="number">4</span>px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  .nav-list&#123;</span><br><span class="line">    flex: <span class="number">1</span>;</span><br><span class="line">    display: flex;</span><br><span class="line">    .nav-item&#123;</span><br><span class="line">      color: @fontColor2;</span><br><span class="line">      font-size: <span class="number">16</span>px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line">      &amp; + .nav-item&#123;</span><br><span class="line">        margin-left: <span class="number">40</span>px;</span><br><span class="line">      &#125;</span><br><span class="line">      &amp;:hover,</span><br><span class="line">      &amp;.active&#123;</span><br><span class="line">        color: @themeColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/style&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><blockquote>
<p>父组件代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"my-tab-wrap"</span>&gt;</span><br><span class="line">    &lt;nav-tab</span><br><span class="line">      :current-tab=<span class="string">"currentTab"</span></span><br><span class="line">      :nav-list=<span class="string">"navList"</span></span><br><span class="line">      :nav-drop-list=<span class="string">"navDropList"</span></span><br><span class="line">      @handleCurrentTab=<span class="string">"handleCurrentTab"</span></span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; mapState, mapMutations &#125; <span class="keyword">from</span> <span class="string">'vuex'</span></span><br><span class="line"><span class="keyword">import</span> navTab <span class="keyword">from</span> <span class="string">'../components/navTab'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    navTab</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      navList: [<span class="string">'标题1'</span>, <span class="string">'标题2'</span>, <span class="string">'标题3'</span>, <span class="string">'标题4'</span>],</span><br><span class="line">      navDropList: [&#123;</span><br><span class="line">        title: <span class="string">'菜单1'</span>,</span><br><span class="line">        list: [<span class="string">'菜单标题1'</span>, <span class="string">'菜单标题2'</span>, <span class="string">'菜单标题3'</span>]</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">        title: <span class="string">'菜单2'</span>,</span><br><span class="line">        list: [<span class="string">'菜单标题1'</span>, <span class="string">'菜单标题2'</span>]</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapState(&#123;</span><br><span class="line">      currentTab: <span class="function"><span class="params">state</span> =&gt;</span> state.myResource.currentTab</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    ...mapMutations(<span class="string">'myResource'</span>, [<span class="string">'handleCurrentTab'</span>])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style lang="less" scoped&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="vuex"><a href="#vuex" class="headerlink" title="vuex"></a>vuex</h3><blockquote>
<p>myResource 模块下</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="comment">// 当前tab下标</span></span><br><span class="line">  currentTab: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="comment">// 改变当前tab下标</span></span><br><span class="line">  handleCurrentTab(state, index) &#123;</span><br><span class="line">    state.currentTab = index</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  namespaced: <span class="literal">true</span>,</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue 监听窗口变化对页面部分元素重新渲染</title>
    <url>/2020/07/24/vue%E7%9B%91%E5%90%AC%E7%AA%97%E5%8F%A3%E5%8F%98%E5%8C%96%E9%83%A8%E5%88%86%E6%B8%B2%E6%9F%93/</url>
    <content><![CDATA[<p>摘要：vue 监听窗口变化 通过 v-if 对页面部分元素重新渲染</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>在处理页面重新渲染时通常的做法是：</p>
<ol>
<li>用vue-router重新路由到当前页面，页面是不进行刷新的</li>
<li>采用window.reload()，或者router.go(0)刷新时，整个浏览器进行了重新加载，闪烁，体验不好</li>
</ol>
<h3 id="使用-v-if-重新渲染部分组件或容器"><a href="#使用-v-if-重新渲染部分组件或容器" class="headerlink" title="使用 v-if 重新渲染部分组件或容器"></a>使用 v-if 重新渲染部分组件或容器</h3><blockquote>
<p>需要重新渲染的内容</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">"render"</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="vue-监听窗口大小发生改变"><a href="#vue-监听窗口大小发生改变" class="headerlink" title="vue 监听窗口大小发生改变"></a>vue 监听窗口大小发生改变</h3><blockquote>
<p> 使用 window.addEventListener() 添加 resize 事件监听窗口变化</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">render</span>: <span class="literal">true</span> &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>, <span class="keyword">this</span>.reload)</span><br><span class="line">  &#125;,</span><br><span class="line">  beforeDestroy() &#123;</span><br><span class="line">    <span class="built_in">window</span>.removeEventListener(<span class="string">'resize'</span>, <span class="keyword">this</span>.reload)</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reload() &#123;</span><br><span class="line">      <span class="comment">// 重新渲染</span></span><br><span class="line">      <span class="keyword">this</span>.render = <span class="literal">false</span></span><br><span class="line">      <span class="keyword">this</span>.$nextTick(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.render = <span class="literal">true</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>el-scrollbar监听滚动条滚动事件，处理el-tabs滚动到顶部header吸顶效果</title>
    <url>/2020/07/11/el-scrollbar%E7%9B%91%E5%90%AC%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BA%8B%E4%BB%B6/</url>
    <content><![CDATA[<p>摘要：elememt-ui中使用el-scrollbar时监听scroll事件，处理el-tabs滚动到顶部时header部分吸顶效果</p>
<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>网上关于el-scrollbar滚动事件监听的案例比较少，好不容易找到解决方法，记录一下，启发之处在<a href="https://www.cnblogs.com/gxp69/p/11211231.html" target="_blank" rel="noopener">这里</a>，稍有改动</p>
</blockquote>
<p>在vue中使用elememt-ui时，如果页面比较长需要滚动，我们想要优化浏览器侧边默认的滚动条该怎么做？因为默认滚动条特别丑又会默认加padding-left占据页面空间，对页面UI效果体验不是太好，所以在使用elememt-ui时我们通常使用el-scrollbar组件去优化滚动条，而el-scrollbar这个组件官方并没有明确说明，所以对其中的一些属性很陌生，本文主要介绍如何使用el-scrollbar对滚动事件进行监听，达到导航吸顶效果。</p>
<h3 id="图示"><a href="#图示" class="headerlink" title="图示"></a>图示</h3><blockquote>
<p>刚加载完页面时，tabs标题区域距离顶部有一段距离</p>
</blockquote>
<p><img src="https://lwlblog.top/images/demo/el-tabs.jpg" alt="图示"></p>
<blockquote>
<p>当向上滑动时，tabs-header到顶部时固定在顶部，下滑时在恢复原位</p>
</blockquote>
<p><img src="https://lwlblog.top/images/demo/el-tabs-top.jpg" alt="图示"></p>
<h3 id="el-scrollbar-的使用"><a href="#el-scrollbar-的使用" class="headerlink" title="el-scrollbar 的使用"></a>el-scrollbar 的使用</h3><blockquote>
<p>el-scrollbar 使用起来很简单，在使用时要设置外层容器高度，并且要设置el-scrollbar 的高度为100%</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.el-scrollbar__wrap</span>&#123;</span><br><span class="line">  <span class="attribute">overflow-x</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意（巨坑）</strong>：如果项目中用到很多el-scrollbar组件，把<code>.el-scrollbar__wrap</code>写成<strong>全局样式</strong>的时候，<strong>一定不能直接写在全局</strong>，否则会影响到<code>el-cascader、el-select</code>之类的组件（导致组件下滑到底部时最后一个元素会被遮挡一部分），原因是<code>el-cascader、el-select</code>这些组件是类似弹窗自动生成到script标签之下，也就是在body上追加的元素，写到全局会对其造成影响，要在其外层包裹主页面的class或id名，或者嵌套在其父级标签下。</p>
<blockquote>
<p>例如</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#app</span>&#123;</span><br><span class="line">  .el-scrollbar__wrap&#123;</span><br><span class="line">    <span class="selector-tag">overflow-x</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>然后使用下面代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-scrollbar</span> <span class="attr">ref</span>=<span class="string">"scrollbar"</span> <span class="attr">style</span>=<span class="string">"height:100%"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-tabs</span> <span class="attr">:class</span>=<span class="string">"isFixedTop &amp;&amp; 'tabs-fixed-top'"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span>&gt;</span><span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tab-pane</span>&gt;</span><span class="tag">&lt;/<span class="name">el-tab-pane</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-tabs</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-scrollbar</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="el-scrollbar-监听滚动事件"><a href="#el-scrollbar-监听滚动事件" class="headerlink" title="el-scrollbar 监听滚动事件"></a>el-scrollbar 监听滚动事件</h3><blockquote>
<p>js代码如下</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">isFixedTop</span>: <span class="literal">false</span> &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    <span class="keyword">this</span>.handleScroll()</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleScroll() &#123;</span><br><span class="line">      <span class="keyword">let</span> scrollbarEl = <span class="keyword">this</span>.$refs.scrollbar.wrap</span><br><span class="line">      scrollbarEl.onscroll = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(scrollbarEl.scrollTop &gt; <span class="number">135</span>) &#123;</span><br><span class="line">          <span class="keyword">this</span>.isFixedTop = <span class="literal">true</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">this</span>.isFixedTop = <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>135 为el-tabs到浏览器顶部的距离，这里可以传入动态参数动态获取，我这里没有必要了</p>
</blockquote>
<blockquote>
<p>css 部分（需求不同，仅供参考）</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 滚动导航顶部贴顶效果 */</span></span><br><span class="line"><span class="selector-class">.tabs-fixed-top</span>&#123;</span><br><span class="line">  .el-tabs__header&#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    <span class="selector-tag">position</span>: <span class="selector-tag">fixed</span>;</span><br><span class="line">    <span class="selector-tag">top</span>: 40<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">left</span>: 0;</span><br><span class="line">    <span class="selector-tag">z-index</span>: 20;</span><br><span class="line">    <span class="selector-tag">padding-left</span>: 24<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: 2<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#E4E7ED</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-tabs__content</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">63px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.el-tabs__nav-wrap</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: normal;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
        <tag>elememt-ui</tag>
      </tags>
  </entry>
  <entry>
    <title>vue element-ui 复制文本到粘贴板</title>
    <url>/2020/06/22/%E5%A4%8D%E5%88%B6%E6%96%87%E6%9C%AC/</url>
    <content><![CDATA[<p>摘要：vue element-ui 复制链接到粘贴板封装方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">copy(data) &#123;</span><br><span class="line">  <span class="keyword">let</span> url = data</span><br><span class="line">  <span class="keyword">let</span> oInput = <span class="built_in">document</span>.createElement(<span class="string">'input'</span>)</span><br><span class="line">  oInput.value = url</span><br><span class="line">  <span class="built_in">document</span>.body.appendChild(oInput)</span><br><span class="line">  oInput.select() <span class="comment">// 选择对象</span></span><br><span class="line">  <span class="built_in">document</span>.execCommand(<span class="string">"Copy"</span>) <span class="comment">// 执行浏览器复制命令</span></span><br><span class="line">  <span class="keyword">this</span>.$message(&#123;</span><br><span class="line">    message: <span class="string">'复制成功'</span>,</span><br><span class="line">    type: <span class="string">'success'</span></span><br><span class="line">  &#125;)</span><br><span class="line">  oInput.remove()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用方法</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">copyLink() &#123;</span><br><span class="line">  <span class="keyword">this</span>.copy(<span class="string">'https://baidu.com/'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>git 添加多个远程仓库命令</title>
    <url>/2020/04/10/git%20%E6%B7%BB%E5%8A%A0%E5%A4%9A%E4%B8%AA%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>摘要：添加多个仓库</p>
<h3 id="添加多个仓库"><a href="#添加多个仓库" class="headerlink" title="添加多个仓库"></a>添加多个仓库</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><blockquote>
<p>注意这里的<strong>origin</strong>和<strong>gitee</strong>为自定义远程仓库的名字，不能重复。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加github</span></span><br><span class="line">git remote add origin https:<span class="comment">//github.com/xxx(仓库地址)</span></span><br><span class="line"><span class="comment">// 添加gitee</span></span><br><span class="line">git remote add gitee https:<span class="comment">//git.gitee.com/xxxx(仓库地址)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除origin仓库</span></span><br><span class="line">git remote rm origin</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交到github</span></span><br><span class="line">git push origin </span><br><span class="line"><span class="comment">// 提交到gitee</span></span><br><span class="line">git push gitee</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从github更新</span></span><br><span class="line">git pull origin master</span><br><span class="line"><span class="comment">// 从gitee更新</span></span><br><span class="line">git pull gitee master</span><br></pre></td></tr></table></figure>
<h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><blockquote>
<p>添加第二个gitee仓库</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">git remote <span class="keyword">set</span>-url --add gitee https://git.gitee.com/xxxx(仓库地址)</span><br><span class="line"></span><br><span class="line">// 此时只需要一次push就能同步到多个远程仓库</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>配置1可以选择任一仓库进行pull，而配置2缺默认只能从config中的第一个url内的仓库pull代码。</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>清明时节，网页如何变灰色</title>
    <url>/2020/04/04/%E7%BD%91%E9%A1%B5%E5%A6%82%E4%BD%95%E5%8F%98%E7%81%B0%E8%89%B2/</url>
    <content><![CDATA[<p>摘要：常用基础算法题集合</p>
<h3 id="清明时节，css3如何将网页变成灰色"><a href="#清明时节，css3如何将网页变成灰色" class="headerlink" title="清明时节，css3如何将网页变成灰色"></a>清明时节，css3如何将网页变成灰色</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">filter</span>:progid:DXImageTransform.Microsoft.<span class="built_in">BasicImage</span>(grayscale=<span class="number">1</span>);</span><br><span class="line">  <span class="attribute">-webkit-filter</span>:<span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">-moz-filter</span>:<span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">-ms-filter</span>:<span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">-o-filter</span>:<span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">filter</span>:<span class="built_in">grayscale</span>(<span class="number">100%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里其实只用到了一个滤镜属性<strong>filter: grayscale(100%);</strong></p>
]]></content>
      <categories>
        <category>css3</category>
      </categories>
      <tags>
        <tag>css3</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript——常用基础API部分方法（函数）集合</title>
    <url>/2020/03/13/javascript%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80API%E9%83%A8%E5%88%86%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>摘要：常用基础API部分方法（函数）集合</p>
<h3 id="javascript——常用基础API部分方法（函数）集合"><a href="#javascript——常用基础API部分方法（函数）集合" class="headerlink" title="javascript——常用基础API部分方法（函数）集合"></a>javascript——常用基础API部分方法（函数）集合</h3><h4 id="字符串转化成驼峰表示法"><a href="#字符串转化成驼峰表示法" class="headerlink" title="字符串转化成驼峰表示法"></a>字符串转化成驼峰表示法</h4><blockquote>
<p>将字符串foo=”get-elment-by-id”转化成驼峰表示法”getElementById”</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">combo</span>(<span class="params">msg</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 分割成字符串数组</span></span><br><span class="line">  <span class="keyword">var</span> arr = msg.split(<span class="string">"-"</span>);</span><br><span class="line">  <span class="comment">// 从数组第二位开始遍历，首字母改为大写</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">    arr[i] = arr[i].charAt(<span class="number">0</span>).toUpperCase() + arr[i].substr(<span class="number">1</span>, arr[i].length - <span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 组合成字符串</span></span><br><span class="line">  msg = arr.join(<span class="string">""</span>);</span><br><span class="line">  <span class="keyword">return</span> msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">combo(<span class="string">"get-elment-by-id"</span>);	<span class="comment">// getElmentById</span></span><br></pre></td></tr></table></figure>

<h4 id="统一日期格式-YYYY-MM-DD"><a href="#统一日期格式-YYYY-MM-DD" class="headerlink" title="统一日期格式 YYYY-MM-DD"></a>统一日期格式 YYYY-MM-DD</h4><blockquote>
<p>以 YYYY-MM-DD 的方式，输出今天的日期</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="keyword">var</span> year = d.getFullYear();</span><br><span class="line"><span class="comment">// 获取月份，记得加一</span></span><br><span class="line"><span class="keyword">var</span> month = d.getMonth() + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 10以下变成两位</span></span><br><span class="line">month = month &lt; <span class="number">10</span> ? <span class="string">'0'</span> + month : month;</span><br><span class="line"><span class="keyword">var</span> day = d.getDate();</span><br><span class="line"><span class="comment">// 10以下变成两位</span></span><br><span class="line">day = day &lt; <span class="number">10</span> ? <span class="string">'0'</span> + day : day;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(year + <span class="string">'-'</span> + month + <span class="string">'-'</span> + day);  <span class="comment">// 2020-02-29</span></span><br></pre></td></tr></table></figure>

<h4 id="特殊字符转义"><a href="#特殊字符转义" class="headerlink" title="特殊字符转义"></a>特殊字符转义</h4><blockquote>
<p>为了保证页面输出安全，我们经常需要对一些特殊的字符进行转义，请写一个函数 escapeHtml，将&lt;, &gt;, &amp;, “进行转义</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">escapeHtml</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str.replace(<span class="regexp">/[&lt;&gt;"&amp;]/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">match</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (match) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"&lt;"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;lt;"</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"&gt;"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;gt;"</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"&amp;"</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;amp;"</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="string">"\""</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;quot;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">escapeHtml(<span class="string">"&lt;div&gt;"</span>);	<span class="comment">// &amp;lt;div&amp;gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="生成几个不同的随机数"><a href="#生成几个不同的随机数" class="headerlink" title="生成几个不同的随机数"></a>生成几个不同的随机数</h4><blockquote>
<p>生成 5 个不同的随机数，每生成一次就和前面的所有数字相比较，如果有相同的，则放弃当前生成的数字</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">  <span class="comment">// 生成随机数，范围是 [1, 10]</span></span><br><span class="line">  num1[i] = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">    <span class="comment">// 如果重复，重新进行本次循环</span></span><br><span class="line">    <span class="keyword">if</span> (num1[i] == num1[j]) &#123;</span><br><span class="line">      i--;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(num1);	<span class="comment">// 随机数组 [9, 1, 7, 10, 6]</span></span><br></pre></td></tr></table></figure>

<h4 id="范围内随机选取一组数字"><a href="#范围内随机选取一组数字" class="headerlink" title="范围内随机选取一组数字"></a>范围内随机选取一组数字</h4><blockquote>
<p>用 js 实现随机选取 10–50之间的 10 个数字，存入一个数组，并排序。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomNub</span>(<span class="params">aArray, len, min, max</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 不符合条件</span></span><br><span class="line">  <span class="keyword">if</span> (len &gt;= (max - min)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'超过'</span> + min + <span class="string">'-'</span> + max + <span class="string">'之间的个数范围'</span> + (max - min - <span class="number">1</span>) + <span class="string">'个的总数'</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 达到数量后排序</span></span><br><span class="line">  <span class="keyword">if</span> (aArray.length &gt;= len) &#123;</span><br><span class="line">    aArray.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a - b</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> aArray;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 生成随机数</span></span><br><span class="line">  <span class="keyword">var</span> nowNub = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * (max - min - <span class="number">1</span>)) + (min + <span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 防止重复</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; aArray.length; j++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (nowNub == aArray[j]) &#123;</span><br><span class="line">      randomNub(aArray, len, min, max);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  aArray.push(nowNub);</span><br><span class="line">  <span class="comment">// 递归循环</span></span><br><span class="line">  <span class="built_in">arguments</span>.callee(aArray, len, min, max);</span><br><span class="line">  <span class="keyword">return</span> aArray;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [];</span><br><span class="line">randomNub(arr, <span class="number">10</span>, <span class="number">10</span>, <span class="number">50</span>);	<span class="comment">// 随机数组[20, 26, 28, 29, 30, 35, 40, 41, 44, 49]</span></span><br></pre></td></tr></table></figure>

<h4 id="提取URL中的各个GET参数"><a href="#提取URL中的各个GET参数" class="headerlink" title="提取URL中的各个GET参数"></a>提取URL中的各个GET参数</h4><blockquote>
<p>有这样一个 URL：<a href="http://item.taobao.com/item.htm?a=1&amp;b=&amp;c=xxx&amp;d，请写一段" target="_blank" rel="noopener">http://item.taobao.com/item.htm?a=1&amp;b=&amp;c=xxx&amp;d，请写一段</a> JS 程序提取 URL中的各个 GET 参数(参数名和参数个数不确定)，将其按 key-value 形式返回到一个 json 结构中</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">serilizeUrl</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> urlObject = &#123;&#125;;</span><br><span class="line">  <span class="comment">// 是否有'?'</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/\?/</span>.test(url)) &#123;</span><br><span class="line">    <span class="comment">// 截取'?'以后的字符串，也可结合location对象获取</span></span><br><span class="line">    <span class="keyword">var</span> urlString = url.substring(url.indexOf(<span class="string">"?"</span>) + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 分割成字符串数组 ['a=1', 'b=', 'c=xxx', 'd']</span></span><br><span class="line">    <span class="keyword">var</span> urlArray = urlString.split(<span class="string">"&amp;"</span>);</span><br><span class="line">    <span class="comment">// 遍历 再次分割 [['a', '1'], ['b', ''], ['c', 'xxx'], ['d']]</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, len = urlArray.length; i &lt; len; i++) &#123;</span><br><span class="line">      <span class="keyword">var</span> urlItem = urlArray[i];</span><br><span class="line">      <span class="keyword">var</span> item = urlItem.split(<span class="string">"="</span>);</span><br><span class="line">      urlObject[item[<span class="number">0</span>]] = item[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> urlObject;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url = <span class="string">"http://item.taobao.com/item.htm?a=1&amp;b=&amp;c=xxx&amp;d"</span>;</span><br><span class="line">serilizeUrl(url);	<span class="comment">// &#123;a: "1", b: "", c: "xxx", d: undefined&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="清除字符串前后的空格"><a href="#清除字符串前后的空格" class="headerlink" title="清除字符串前后的空格"></a>清除字符串前后的空格</h4><blockquote>
<p>写一个 function，清除字符串前后的空格。（兼容所有浏览器）</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="built_in">String</span>.prototype.trim) &#123;</span><br><span class="line">  <span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/^\s+/</span>, <span class="string">""</span>).replace(<span class="regexp">/\s+$/</span>, <span class="string">""</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">" \t\n test string "</span>.trim();</span><br><span class="line"><span class="built_in">console</span>.log(str == <span class="string">"test string"</span>);	<span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<h4 id="统计出现最多的字符"><a href="#统计出现最多的字符" class="headerlink" title="统计出现最多的字符"></a>统计出现最多的字符</h4><blockquote>
<p>判断一个字符串中出现次数最多的字符，统计这个次数</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 保存出现的字符并计次数</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'asdfssaaasasasasaa'</span>;</span><br><span class="line"><span class="keyword">var</span> json = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; str.length; i++) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!json[str.charAt(i)]) &#123;</span><br><span class="line">    json[str.charAt(i)] = <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    json[str.charAt(i)]++;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 查询出现次数最多的字符</span></span><br><span class="line"><span class="keyword">var</span> iMax = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> iIndex = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> json) &#123;</span><br><span class="line">  <span class="keyword">if</span> (json[i] &gt; iMax) &#123;</span><br><span class="line">    iMax = json[i];</span><br><span class="line">    iIndex = i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'出现次数最多的是:'</span> + iIndex + <span class="string">'，出现'</span> + iMax + <span class="string">'次'</span>);</span><br></pre></td></tr></table></figure>

<h4 id="获取非行间样式"><a href="#获取非行间样式" class="headerlink" title="获取非行间样式"></a>获取非行间样式</h4><blockquote>
<p>写一个获取非行间样式的函数</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getAttr</span>(<span class="params">obj, attr</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> style;</span><br><span class="line">  <span class="keyword">if</span> (obj.currentStyle) &#123;   <span class="comment">//当有这个属性的时候currentStyle</span></span><br><span class="line">    style = obj.currentStyle[attr]; <span class="comment">//兼容IE</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    style = getComputedStyle(obj, <span class="literal">false</span>)[attr]; <span class="comment">//主流浏览器</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> style;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> box = <span class="built_in">document</span>.getElementById(<span class="string">'box'</span>);</span><br><span class="line">getAttr(box, <span class="string">'width'</span>);	<span class="comment">// 200px</span></span><br></pre></td></tr></table></figure>

<h4 id="数字转化成RMB形式"><a href="#数字转化成RMB形式" class="headerlink" title="数字转化成RMB形式"></a>数字转化成RMB形式</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 转换成字符串并反转</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">re</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  str += <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">return</span> str.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 转换为RMB格式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toRMB</span>(<span class="params">num</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tmp = <span class="string">''</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= re(num).length; i++) &#123;</span><br><span class="line">    tmp += re(num)[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span> &amp;&amp; i != re(num).length) &#123;</span><br><span class="line">      tmp += <span class="string">','</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> re(tmp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">toRMB(<span class="number">1234567</span>);	<span class="comment">// 1,234,567</span></span><br></pre></td></tr></table></figure>

<h4 id="数组数字去重"><a href="#数组数字去重" class="headerlink" title="数组数字去重"></a>数组数字去重</h4><blockquote>
<p>用原型，去掉数组中重复的数字</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Array</span>.prototype.unique = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n = []; <span class="comment">//一个新的临时数组</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) <span class="comment">//遍历当前数组</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//如果当前数组的第 i 已经保存进了临时数组，那么跳过，</span></span><br><span class="line">    <span class="comment">//否则把当前项 push 到临时数组里面</span></span><br><span class="line">    <span class="keyword">if</span> (n.indexOf(<span class="keyword">this</span>[i]) == <span class="number">-1</span>) &#123;</span><br><span class="line">      n.push(<span class="keyword">this</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">3</span>,<span class="number">25</span>,<span class="number">4</span>];</span><br><span class="line">arr.unique();	<span class="comment">// [1, 2, 3, 4, 5, 6, 9, 25]</span></span><br></pre></td></tr></table></figure>

<h4 id="阶乘"><a href="#阶乘" class="headerlink" title="阶乘"></a>阶乘</h4><blockquote>
<p>原型方法</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>.prototype.N = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> re = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= <span class="keyword">this</span>; i++) &#123;</span><br><span class="line">    re *= i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> re;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">num.N();	<span class="comment">// 120</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>递归方法</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jc</span>(<span class="params">n</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n&lt;<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> n*<span class="built_in">arguments</span>.callee(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">jc(<span class="number">5</span>);		<span class="comment">// 120</span></span><br></pre></td></tr></table></figure>

<h4 id="计算字符串字节数"><a href="#计算字符串字节数" class="headerlink" title="计算字符串字节数"></a>计算字符串字节数</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">strlen</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!<span class="built_in">arguments</span>.length || !s) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">var</span> len = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; s.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s.charCodeAt(i) &gt; <span class="number">255</span>) len += <span class="number">2</span>; <span class="keyword">else</span> len += <span class="number">1</span>; <span class="comment">//charCodeAt()得到的是 unCode 码</span></span><br><span class="line">  &#125; <span class="comment">//汉字的 unCode 码大于 255bit 就是两个字节</span></span><br><span class="line">  <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">strlen(<span class="string">'哈哈123'</span>);	<span class="comment">// 7</span></span><br></pre></td></tr></table></figure>

<h4 id="拆分字符串"><a href="#拆分字符串" class="headerlink" title="拆分字符串"></a>拆分字符串</h4><blockquote>
<p>specify(‘hello,world’)//=&gt;’h,e,l,l,o,w,o,r,l,d’实现 specify 函数</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">specify</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> tempArray = <span class="built_in">Array</span>.prototype.filter.call(str, <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt;= <span class="string">'A'</span> &amp;&amp; value &lt;= <span class="string">'z'</span> &amp;&amp; value != <span class="string">"_"</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> tempArray.join(<span class="string">","</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">specify(<span class="string">"he____*(%$# !!!))))))llo,Wo@@@rld"</span>);	<span class="comment">// h,e,l,l,o,W,o,r,l,d</span></span><br></pre></td></tr></table></figure>

<h4 id="FF-与-IE-中阻止事件冒泡"><a href="#FF-与-IE-中阻止事件冒泡" class="headerlink" title="FF 与 IE 中阻止事件冒泡"></a>FF 与 IE 中阻止事件冒泡</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopPropagation</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">  e = e || <span class="built_in">window</span>.event;</span><br><span class="line">  <span class="keyword">if</span> (e.stopPropagation) &#123; <span class="comment">//W3C 阻止冒泡方法</span></span><br><span class="line">    e.stopPropagation();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    e.cancelBubble = <span class="literal">true</span>; <span class="comment">//IE 阻止冒泡方法</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="用-×÷和Math实现三目运算"><a href="#用-×÷和Math实现三目运算" class="headerlink" title="用+-×÷和Math实现三目运算"></a>用+-×÷和Math实现三目运算</h4><blockquote>
<p>只允许使用 + - * / 和 Math.* ，求一个函数 y = f(x, a, b);当 x &gt; 100 时返回 a 的值，否则返回 b 的值，不能使用 if else 等条件语句，也不能使用|,?:,数组</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">x, a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> temp = <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.min(<span class="built_in">Math</span>.max(x - <span class="number">100</span>, <span class="number">0</span>), <span class="number">1</span>));</span><br><span class="line">  <span class="keyword">return</span> a * temp + b * (<span class="number">1</span> - temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="number">10</span>, <span class="number">1</span>, <span class="number">2</span>);	<span class="comment">// 2</span></span><br></pre></td></tr></table></figure>

<h4 id="arguments实现加法函数"><a href="#arguments实现加法函数" class="headerlink" title="arguments实现加法函数"></a>arguments实现加法函数</h4><blockquote>
<p>写一个函数可以计算 sum(5,0,-5);输出 0; sum(1,2,3,4);输出 10;</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function sum() &#123;</span><br><span class="line">  var result &#x3D; 0;</span><br><span class="line">  var len &#x3D; arguments.length;</span><br><span class="line">  for (var i &#x3D; 0; i &lt; len; i++) &#123;</span><br><span class="line">    var num &#x3D; arguments[i];</span><br><span class="line">    if (typeof num &#x3D;&#x3D; &#39;number&#39;) &#123;</span><br><span class="line">      result +&#x3D; num;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sum(5,0,-5);	&#x2F;&#x2F; 0</span><br><span class="line">sum(1,2,3,4);	&#x2F;&#x2F; 10</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript——常用基础算法题集合</title>
    <url>/2020/03/12/javascript%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<p>摘要：常用基础算法题集合</p>
<h3 id="javascript——常用基础算法题集合"><a href="#javascript——常用基础算法题集合" class="headerlink" title="javascript——常用基础算法题集合"></a>javascript——常用基础算法题集合</h3><h4 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h4><blockquote>
<p>如果一对兔子每月生一对兔子；一对新生兔，从第二个月起就开始生兔子；假定每对兔子都是一雌一雄，试问一对兔子，第 n 个月能繁殖成多少对兔子？</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> result = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (result[n]) &#123;</span><br><span class="line">      <span class="keyword">return</span> result[n];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      result[n] = <span class="built_in">arguments</span>.callee(n - <span class="number">1</span>) + <span class="built_in">arguments</span>.callee(n - <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">return</span> result[n];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript面试题 - 关于setTimeout异步的案例</title>
    <url>/2020/02/28/javascript%E9%9D%A2%E8%AF%95%E9%A2%98%20-%20%E5%85%B3%E4%BA%8EsetTimeout%E5%BC%82%E6%AD%A5%E7%9A%84%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<p>摘要：javascript面试题 - 关于setTimeout异步的案例</p>
<h3 id="javascript面试题-关于setTimeout异步的案例"><a href="#javascript面试题-关于setTimeout异步的案例" class="headerlink" title="javascript面试题 - 关于setTimeout异步的案例"></a>javascript面试题 - 关于setTimeout异步的案例</h3><blockquote>
<p>以下代码中 end 字符串什么时候输出？</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> t = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'123'</span>);	<span class="comment">// 不执行</span></span><br><span class="line">  t = <span class="literal">false</span>;</span><br><span class="line">&#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="keyword">while</span> (t)&#123;&#125;</span><br><span class="line">alert(<span class="string">'end'</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p> 结果是死循环，永远不弹出’end’</p>
</blockquote>
<p>原因：js是单线程的，while和alert都是同步代码，所以会先执行while再alert，而while循环是一个死循环，所以alert也不会执行。setTimeout是异步代码，因为js的工作机制是当主线程中没有执行任何同步代码的前提下才会执行异步代码，所以setTimeout只能等while完了才会执行，但死循环是永远不会停止的，所以setTimeout也不会执行。</p>
<p><strong>总结：当线程中没有执行任何同步代码的前提下才会执行异步代码</strong></p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>一道有趣的for循环题</title>
    <url>/2020/02/26/%E4%B8%80%E9%81%93%E6%9C%89%E5%85%B3for%E5%BE%AA%E7%8E%AF%E7%9A%84%E9%A2%98/</url>
    <content><![CDATA[<p>摘要：在复习js基础知识时发现了一个for循环的题。</p>
<h3 id="一道有趣的for循环题"><a href="#一道有趣的for循环题" class="headerlink" title="一道有趣的for循环题"></a>一道有趣的for循环题</h3><p>今天在复习js基础知识时发现了一个for循环的题，第一眼看到直接懵逼了，没想到for循环竟然还可以这样玩？涨姿势了。</p>
<blockquote>
<p>题目是这样的</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>, j=<span class="number">0</span>; i&lt;<span class="number">10</span>, j&lt;<span class="number">6</span>; i++, j++)&#123;</span><br><span class="line">	k = i + j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(k);	<span class="comment">//10</span></span><br></pre></td></tr></table></figure>

<p>k 的值结果为 10，刚开始不解，就在循环中打印了一下 i 和 j 的值，发现一共循环了六次，i 和 j 的值是相等的。</p>
<blockquote>
<p>把 i 和 j 的判断部分互换位置</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>, j=<span class="number">0</span>; i&lt;<span class="number">6</span>, j&lt;<span class="number">10</span>; i++, j++)&#123;</span><br><span class="line">	k = i + j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(k);	<span class="comment">//18</span></span><br></pre></td></tr></table></figure>

<p>结果为18，其实到这里就可以发现，中间的循环体只有最后一个生效，即 j&lt;10。至于<code>i=0, j=0;</code>只是定义变量的初始值，完全可以写到外面，<code>i++, j++</code>是每次循环进行的操作。</p>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>css使用padding-bottom百分比进行提前占位，防止抖动</title>
    <url>/2020/02/13/padding-bottom/</url>
    <content><![CDATA[<p>摘要：web开发中用padding-bottom百分比进行占位解决页面加载抖动问题。</p>
<h3 id="页面加载抖动问题"><a href="#页面加载抖动问题" class="headerlink" title="页面加载抖动问题"></a>页面加载抖动问题</h3><p>在web开发中，经常会遇到这样一个问题，比如一个宽度百分百，高度自适应的图片，在网速慢的情况下加载过程中会出现抖动的问题（未加载图片前容器的高度为0，图片加载完成后下面的内容会被挤下去）。</p>
<p>这种问题如果是图片有固定高度，就不会出现加载抖动。但一般情况下，为了使图片不被拉伸，高度一般设为自适应，那么为了防止加载抖动，我们需要给图片提前占个位，这里使用的是css的padding-bottom百分比进行占位。</p>
<blockquote>
<p>示例代码如下</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.img-box</span>&#123;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>padding-bottom实际上是提前占位了，这个容器的高度始终是0，高度为0还之所以能够显示内容是因为内容溢出在了padding-bottom上，这里的50%是图片的<strong>高宽</strong>比例，切记是相对于<strong>父元素宽度</strong>的50%（即.img-box的上一级），不是相对于自己的width，详情请看下面的例子。</p>
<blockquote>
<p>这里写了一个小案例</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>padding-bottom<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.content</span>&#123;</span></span><br><span class="line">      width: 400px;</span><br><span class="line">      height: 400px;</span><br><span class="line">      margin: 100px auto;</span><br><span class="line">      background-color: aquamarine;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 100%;  <span class="comment">/* 400px 相对于content的width */</span></span></span><br><span class="line">      height: 0;</span><br><span class="line"><span class="css">      <span class="selector-tag">padding-bottom</span>: 50%;  <span class="comment">/* 200px 相对于content的width */</span></span></span><br><span class="line">      background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">width</span>: 25%; <span class="comment">/* 100px 相对于box1的width */</span></span></span><br><span class="line">      height: 0;</span><br><span class="line"><span class="css">      <span class="selector-tag">padding-bottom</span>: 25%;  <span class="comment">/* 100px 相对于box1的width */</span></span></span><br><span class="line">      background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>如图所示</p>
</blockquote>
<p><img src="https://ae01.alicdn.com/kf/H53454ef5f682473391f2792533fb38b6s.png" alt="padding-bottom"></p>
<p>这种情况下box2中如果有图片宽高比为一比一时（根据padding的百分比），加载过程中就不会出现抖动的情况，同理box1也是如此。</p>
<p>当然解决抖动还有其他方法，比如何以用vw（兼容性不太好，这里就不列举了），还有比如在微信小程序中rpx，如果图片的设计大小宽高为750×300时，就可以直接写成height: 300rpx。</p>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>小程序onShow事件获取options方法</title>
    <url>/2020/02/03/%E5%B0%8F%E7%A8%8B%E5%BA%8FonShow%E4%BA%8B%E4%BB%B6%E8%8E%B7%E5%8F%96options%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p>摘要：微信小程序 onShow() 事件 通过小程序页面栈获取 获取页面传递参数 options 方法</p>
<h3 id="微信小程序-onShow-事件"><a href="#微信小程序-onShow-事件" class="headerlink" title="微信小程序 onShow() 事件"></a>微信小程序 onShow() 事件</h3><blockquote>
<p>onShow() 事件不接受参数，因此无法获取页面 url 传递过来的参数，只有 onLoad() 事件可以。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">onShow(options)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(options)	<span class="comment">//打印值为 undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">onLoad(options)&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(options)	<span class="comment">//正常打印出 options 值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="解决方法——通过小程序页面栈获取"><a href="#解决方法——通过小程序页面栈获取" class="headerlink" title="解决方法——通过小程序页面栈获取"></a>解决方法——通过小程序页面栈获取</h3><blockquote>
<p>思路：</p>
<p>1.获取当前小程序的页面栈—数组   长度最大是10个页面。</p>
<p>2.数组中索引最大的页面就是当前页面，其中可以获取到 options 属性。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">onShow() &#123;</span><br><span class="line">  <span class="comment">// 获取当前小程序的页面栈</span></span><br><span class="line">  <span class="keyword">let</span> pages = getCurrentPages();</span><br><span class="line">  <span class="comment">// 数组中索引最大的页面--当前页面</span></span><br><span class="line">  <span class="keyword">let</span> currentPage = pages[pages.length<span class="number">-1</span>];</span><br><span class="line">  <span class="comment">// 打印出当前页面中的 options</span></span><br><span class="line">  <span class="built_in">console</span>.log(currentPage.options)		<span class="comment">//正常打印出 options 值</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>小程序</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>request封装</title>
    <url>/2019/12/29/request%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<p>摘要：使用 ES5 ES6 以及 async await 对request进行封装</p>
<h3 id="request封装——微信小程序使用async，await"><a href="#request封装——微信小程序使用async，await" class="headerlink" title="request封装——微信小程序使用async，await"></a>request封装——微信小程序使用async，await</h3><h4 id="ES5"><a href="#ES5" class="headerlink" title="ES5"></a>ES5</h4><blockquote>
<p>参考代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> request = <span class="function"><span class="keyword">function</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    type        : param.method  || <span class="string">'get'</span>,</span><br><span class="line">    url         : param.url     || <span class="string">''</span>,</span><br><span class="line">    dataType    : param.type    || <span class="string">'json'</span>,</span><br><span class="line">    data        : param.data    || <span class="string">''</span>,</span><br><span class="line">    success     : <span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">      <span class="comment">// 请求成功</span></span><br><span class="line">      <span class="keyword">if</span>(<span class="number">0</span> === res.status)&#123;</span><br><span class="line">        <span class="keyword">typeof</span> param.success === <span class="string">'function'</span> &amp;&amp; param.success(res.data, res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 没有登录状态，需要强制登录</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">10</span> === res.status)&#123;</span><br><span class="line">        _this.doLogin();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 请求数据错误</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span>(<span class="number">1</span> === res.status)&#123;</span><br><span class="line">        <span class="keyword">typeof</span> param.error === <span class="string">'function'</span> &amp;&amp; param.error(res.msg);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    error       : <span class="function"><span class="keyword">function</span>(<span class="params">err</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">typeof</span> param.error === <span class="string">'function'</span> &amp;&amp; param.error(err.statusText);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ES6——promise"><a href="#ES6——promise" class="headerlink" title="ES6——promise"></a>ES6——promise</h4><blockquote>
<p>这里以微信小程序开发为例，jquery同理</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// request.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> request = <span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> baseUrl = <span class="string">'https://api.com'</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      ...params,</span><br><span class="line">      url: baseUrl + params.url,</span><br><span class="line">      success: <span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(result);</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>考虑到加载图标</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 同时发送异步请求的次数</span></span><br><span class="line"><span class="keyword">let</span> ajaxTimes = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> request = <span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">  ajaxTimes ++;</span><br><span class="line">  <span class="comment">// 加载图标</span></span><br><span class="line">  wx.showLoading(&#123;</span><br><span class="line">    title: <span class="string">'加载中'</span>,</span><br><span class="line">    mask: <span class="literal">true</span></span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">const</span> baseUrl = <span class="string">'https://api.com'</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      ...params,</span><br><span class="line">      url: baseUrl + params.url,</span><br><span class="line">      success: <span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">        resolve(result.data.message);</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        reject(err);</span><br><span class="line">      &#125;,</span><br><span class="line">      complete: <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        ajaxTimes --;</span><br><span class="line">        <span class="keyword">if</span>(ajaxTimes === <span class="number">0</span>) &#123;</span><br><span class="line">          wx.hideLoading();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用前需要引入request.js文件（更换为自己的文件目录）</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; request &#125; <span class="keyword">from</span> <span class="string">"../../request.js"</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用promise的then方法获取数据</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">getData() &#123;</span><br><span class="line">  request(&#123;<span class="attr">url</span>: <span class="string">'/dataUrl'</span>&#125;)</span><br><span class="line">    .then(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span><br><span class="line">    	……</span><br><span class="line">    &#125;,(err) =&gt; &#123;</span><br><span class="line">    	……</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="ES7——async，await"><a href="#ES7——async，await" class="headerlink" title="ES7——async，await"></a>ES7——async，await</h4><blockquote>
<p>注意：使用async，await必须建立在promise的基础上，所以还要用到上面的ES6——promise所述内容</p>
</blockquote>
<h5 id="微信小程序支持ES7"><a href="#微信小程序支持ES7" class="headerlink" title="微信小程序支持ES7"></a>微信小程序支持ES7</h5><blockquote>
<p>1.下载runtime.js文件到自己的项目文件夹</p>
</blockquote>
<p><a href="http://lwlblog.top/demo/lib/runtime.js">runtime.js</a>    <a href="https://github.com/facebook/regenerator/blob/5703a79746fffc152600fdcef46ba9230671025a/packages/regenerator-runtime/runtime.js" target="_blank" rel="noopener">github</a></p>
<blockquote>
<p>2.在所有用到async，await的文件都要引入</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> regeneratorRuntime <span class="keyword">from</span> <span class="string">"../../lib/runtime/runtime.js"</span>;</span><br></pre></td></tr></table></figure>

<h5 id="使用async，await"><a href="#使用async，await" class="headerlink" title="使用async，await"></a>使用async，await</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> getData() &#123;</span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> request(&#123;<span class="attr">url</span>: <span class="string">'/dataUrl'</span>&#125;);</span><br><span class="line">  ……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>盒模型</title>
    <url>/2019/12/29/%E7%9B%92%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<p>摘要：盒模型中content-box和border-box当宽度为百分比时的位置区别，vw和%区别</p>
<h3 id="盒模型"><a href="#盒模型" class="headerlink" title="盒模型"></a>盒模型</h3><blockquote>
<p>参考代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// CSS 部分</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.box1</span>,<span class="selector-class">.box2</span>&#123;</span></span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    padding: 20px;</span><br><span class="line">    margin: 20px;</span><br><span class="line">    border: 20px solid rebeccapurple;</span><br><span class="line">    background-color: aqua;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box1</span> <span class="selector-tag">div</span>,<span class="selector-class">.box2</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line">    width: 25%;</span><br><span class="line">    height: 25%;</span><br><span class="line">    background-color: red;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line">    background-color: orange;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">// HTML 部分</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box2"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h4><p><img src="http://lwlblog.top/images/demo/box-sizing.png" alt="图示"></p>
<h3 id="vw和-区别"><a href="#vw和-区别" class="headerlink" title="vw和%区别"></a>vw和%区别</h3><blockquote>
<p>改变如下代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.box1 div,.box2 div&#123;</span><br><span class="line">  width: 25vw;</span><br><span class="line">  height: 25vw;</span><br><span class="line">  background-color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="图解-1"><a href="#图解-1" class="headerlink" title="图解"></a>图解</h4><p><img src="http://lwlblog.top/images/demo/box-sizing-vw.png" alt="图示"></p>
<h3 id="x、em、rem、-、vw、vh单位之间的区别？"><a href="#x、em、rem、-、vw、vh单位之间的区别？" class="headerlink" title="x、em、rem、%、vw、vh单位之间的区别？"></a>x、em、rem、%、vw、vh单位之间的区别？</h3><h4 id="1-px"><a href="#1-px" class="headerlink" title="1.px"></a>1.px</h4><blockquote>
<p>px就是 pixel（像素）的缩写，相对长度单位，相对于屏幕分辨率；</p>
</blockquote>
<h4 id="2-em"><a href="#2-em" class="headerlink" title="2.em"></a>2.em</h4><blockquote>
<p>参考父元素的font-size,具有继承的特点。浏览器默认字体是16px,整个页面内1em不是一个固定的值;字体大小同样都是1.5em，但是效果却截然不同，按照W3C提供的公式，我们可以计算下： class为id1的div字体大小继承自父元素body：16px<em>1.5em = 24px class为id2的div字体大小继承自父元素id1：24px</em>1.5em = 36px class为id3的div字体大小继承自父元素id2：36px*1.5em = 54px</p>
</blockquote>
<h4 id="3-rem"><a href="#3-rem" class="headerlink" title="3.rem"></a>3.rem</h4><blockquote>
<p>rem是CSS3新增的一个相对单位，但相对的只是HTML根元素。通过它既可以做到只修改根元素就成比例地调整所有字体大小，又可以避免字体大小逐层复合的连锁反应。</p>
</blockquote>
<h4 id="4"><a href="#4" class="headerlink" title="4.%"></a>4.%</h4><blockquote>
<p>%百分比，相对长度单位，相对于父元素的百分比值</p>
</blockquote>
<h5 id="元素款到与字体大小使用区别："><a href="#元素款到与字体大小使用区别：" class="headerlink" title="元素款到与字体大小使用区别："></a>元素款到与字体大小使用区别：</h5><blockquote>
<p>（1）尽量使用相对尺寸单位</p>
</blockquote>
<p>使用相对尺寸单位计量，则在调整页面的布局的时候，不需要遍历所有的内部</p>
<p>DOM结构，重新设置内部子元素的尺寸大小。如果是随着父容器或者是整体页</p>
<p>面布局而改变尺寸，则使用%更好，如元素的高度和宽度设置；</p>
<blockquote>
<p>（2）字体尺寸尽量使用em,rem</p>
</blockquote>
<p>为了字体大小的可维护性和伸缩性，推荐使用em，如果存在3层以及3层</p>
<p>以上的字体相对尺寸的设置，可以考虑使用em;</p>
<h4 id="5-vh和vw"><a href="#5-vh和vw" class="headerlink" title="5.vh和vw"></a>5.vh和vw</h4><blockquote>
<p>vh和vw 相对于视口的高度和宽度，1vh等于1/100的视口高度，1vw等于1/100的视口宽度，比如：浏览器高度900px，宽度为750px,1vh=900px/100=9px,1vw = 750px/100=7.5px;很容易实现与同屏幕等高的框</p>
</blockquote>
]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>canvas-基础</title>
    <url>/2019/12/02/canvas-%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>摘要：canvas常用方法以及各种实例集合，创建一个属于自己的canvas特效。</p>
<h3 id="创建一个canvas"><a href="#创建一个canvas" class="headerlink" title="创建一个canvas"></a>创建一个canvas</h3><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><blockquote>
<p>创建canvas元素</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>设置宽高使用标签width，height属性，注意不能使用css或style样式</p>
<p>display默认为inline</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">width</span>=<span class="string">"1024"</span> <span class="attr">height</span>=<span class="string">"768"</span> <span class="attr">style</span>=<span class="string">"border: 1px solid #ccc; display: block; margin: 0 auto;"</span>&gt;</span>当前浏览器不支持canvas，请更换浏览器后再试<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><blockquote>
<p>获取canvas</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取canvas元素</span></span><br><span class="line"><span class="keyword">var</span> canvas  = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>)</span><br><span class="line"><span class="comment">//使用context进行绘制</span></span><br><span class="line"><span class="keyword">var</span> context = canvas.getCountext(<span class="string">'2d'</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>除了通过上面HTML属性设置canvas宽高之外，当然也可以用javascript来设置</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">canvas.width = <span class="number">1024</span></span><br><span class="line">canvas.height = <span class="number">768</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>也可以使用javascript检测浏览器是否支持canvas</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(canvas.getContext(<span class="string">'2d'</span>))&#123;</span><br><span class="line">  <span class="keyword">var</span> context = canvas.getCountext(<span class="string">'2d'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  alert(<span class="string">'当前浏览器不支持canvas，请更换浏览器后再试'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="补充——解决vscode编辑canvas没有代码提示问题"><a href="#补充——解决vscode编辑canvas没有代码提示问题" class="headerlink" title="补充——解决vscode编辑canvas没有代码提示问题"></a>补充——解决vscode编辑canvas没有代码提示问题</h4><blockquote>
<p>在定义canvas之前加入如下注释即可</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** <span class="doctag">@type <span class="type">&#123;HTMLCanvasElement&#125;</span> </span>*/</span> </span><br><span class="line"><span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>)</span><br></pre></td></tr></table></figure>

<h3 id="画一条直线"><a href="#画一条直线" class="headerlink" title="画一条直线"></a>画一条直线</h3><blockquote>
<p>画布左上角坐标为默认为（0,0），那么我想画一条坐标从（100,100）到（700,700）的直线，该怎么画呢？</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//起笔</span></span><br><span class="line">context.beginPath()</span><br><span class="line"><span class="comment">//路径</span></span><br><span class="line">context.moveTo(<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">context.lineTo(<span class="number">700</span>, <span class="number">700</span>)</span><br><span class="line"><span class="comment">//落笔</span></span><br><span class="line">context.closePath()</span><br><span class="line"><span class="comment">//绘制路径</span></span><br><span class="line">context.stroke()</span><br></pre></td></tr></table></figure>

<h4 id="beginPath-，closePath"><a href="#beginPath-，closePath" class="headerlink" title="beginPath()，closePath()"></a>beginPath()，closePath()</h4><blockquote>
<p>beginPath()重新规划一条路线</p>
<p>closePath()结束当前的路线，如果当前的路线没有封闭则会自动封闭路线</p>
<p>只绘制一个图形时可以省略这两个方法，但是如果当你再画第二个图形时，下面的context.stroke()会把上面的覆盖，所以注意beginPath()，closePath()的使用</p>
<p>closePath()的另外一个作用就是封闭图形，如果绘制多个图形又不想封闭图形该怎么做呢？这里可以只写beginPath()省略后面的closePath()，从而绘制多个图形时都不会产生影响，beginPath()，closePath()不一定要成对出现</p>
<p>beginPath()后的moveTo()可以被lineTo()代替，即可以不写moveTo()，详见下面画五角星中的应用。</p>
</blockquote>
<h4 id="线条属性"><a href="#线条属性" class="headerlink" title="线条属性"></a>线条属性</h4><h5 id="linewidth"><a href="#linewidth" class="headerlink" title="linewidth"></a>linewidth</h5><blockquote>
<p>线条宽度，属性值为数字</p>
</blockquote>
<h5 id="lineCap"><a href="#lineCap" class="headerlink" title="lineCap"></a>lineCap</h5><blockquote>
<p>线条的边角，注意这个属性的头是突出的，所以比默认线条长度两边各多出一个半径的长度。lineCap只有线条首尾有效果，线条衔接处无效。衔接处使用lineJoin</p>
</blockquote>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>butt</td>
<td>默认。向线条的每个末端添加平直的边缘。</td>
</tr>
<tr>
<td>round</td>
<td>向线条的每个末端添加圆形线帽。</td>
</tr>
<tr>
<td>square</td>
<td>向线条的每个末端添加正方形线帽。</td>
</tr>
</tbody></table>
<h5 id="lineJoin"><a href="#lineJoin" class="headerlink" title="lineJoin"></a>lineJoin</h5><blockquote>
<p>当两条线条交汇时，创建边角</p>
</blockquote>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>bevel</td>
<td>创建斜角。</td>
</tr>
<tr>
<td>round</td>
<td>创建圆角。</td>
</tr>
<tr>
<td>miter</td>
<td>默认。创建尖角。</td>
</tr>
</tbody></table>
<h5 id="miterLimit"><a href="#miterLimit" class="headerlink" title="miterLimit"></a>miterLimit</h5><p><a href="https://www.w3school.com.cn/tags/canvas_miterlimit.asp" target="_blank" rel="noopener">w3school教程</a></p>
<h3 id="画一个三角形"><a href="#画一个三角形" class="headerlink" title="画一个三角形"></a>画一个三角形</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">context.beginPath()</span><br><span class="line"><span class="comment">//路径</span></span><br><span class="line">context.moveTo(<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">context.lineTo(<span class="number">700</span>, <span class="number">700</span>)</span><br><span class="line">context.lineTo(<span class="number">100</span>, <span class="number">700</span>)</span><br><span class="line"><span class="comment">//封闭</span></span><br><span class="line">context.closePath()</span><br><span class="line">context.stroke()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>把线条粗细改成5个像素，颜色为红色</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">context.lineWidth = <span class="number">5</span></span><br><span class="line">context.strokeStyle = <span class="string">'red'</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>填充封闭空间</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//填充颜色</span></span><br><span class="line">context.fillStyle = <span class="string">'#38f'</span></span><br><span class="line">context.fill();</span><br></pre></td></tr></table></figure>

<h4 id="补充——stroke和fill调用先后顺序对绘图的影响"><a href="#补充——stroke和fill调用先后顺序对绘图的影响" class="headerlink" title="补充——stroke和fill调用先后顺序对绘图的影响"></a>补充——stroke和fill调用先后顺序对绘图的影响</h4><blockquote>
<p>先调用stroke在调用fill，绘制的效果看上去lineWidth只绘制出来一半，这是因为先填充会把边框覆盖掉一半，正确顺序是先调用fill在调用stroke，用边框颜色去覆盖填充颜色就能达到理想效果。</p>
</blockquote>
<h4 id="补充——canvas的”状态“和”绘制“代码书写技巧"><a href="#补充——canvas的”状态“和”绘制“代码书写技巧" class="headerlink" title="补充——canvas的”状态“和”绘制“代码书写技巧"></a>补充——canvas的”状态“和”绘制“代码书写技巧</h4><blockquote>
<p>canvas是基于状态进行绘制的，在编程中可以把状态和绘制分开写，这样会更加直观简洁。例如：</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 路径</span></span><br><span class="line">context.beginPath()</span><br><span class="line">context.moveTo(<span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">context.lineTo(<span class="number">700</span>, <span class="number">700</span>)</span><br><span class="line">context.lineTo(<span class="number">100</span>, <span class="number">700</span>)</span><br><span class="line">context.closePath()</span><br><span class="line"><span class="comment">// 状态</span></span><br><span class="line">context.lineWidth = <span class="number">5</span></span><br><span class="line">context.fillStyle = <span class="string">'#38f'</span></span><br><span class="line">context.strokeStyle = <span class="string">'red'</span></span><br><span class="line"><span class="comment">// 绘制</span></span><br><span class="line">context.fill();</span><br><span class="line">context.stroke()</span><br></pre></td></tr></table></figure>

<h3 id="绘制七巧板"><a href="#绘制七巧板" class="headerlink" title="绘制七巧板"></a>绘制七巧板</h3><blockquote>
<p>参考代码如下，注意beginPath()，closePath()的位置</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;canvas-七巧板&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;canvas id=<span class="string">"canvas"</span> style=<span class="string">"border: 1px solid #ccc; display: block; margin: 0 auto;"</span>&gt;</span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    &lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        var tangram = [</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 0, y: 0&#125;, &#123;x: 800, y: 0&#125;, &#123;x: 400, y: 400&#125; ], color: '#caff67' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 0, y: 0&#125;, &#123;x: 400, y: 400&#125;, &#123;x: 0, y: 800&#125; ], color: '#67becf' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 800, y: 0&#125;, &#123;x: 800, y: 400&#125;, &#123;x: 600, y: 600&#125;, &#123;x: 600, y: 200&#125; ], color: '#ef3d61' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 600, y: 200&#125;, &#123;x: 600, y: 600&#125;, &#123;x: 400, y: 400&#125; ], color: '#f9f51a' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 400, y: 400&#125;, &#123;x: 600, y: 600&#125;, &#123;x: 400, y: 800&#125;, &#123;x: 600, y: 600&#125; ], color: '#a594c0' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 200, y: 600&#125;, &#123;x: 400, y: 800&#125;, &#123;x: 0, y: 800&#125; ], color: '#fa8ecc' &#125;,</span></span><br><span class="line"><span class="regexp">            &#123; trajectory: [ &#123;x: 800, y: 400&#125;, &#123;x: 800, y: 800&#125;, &#123;x: 400, y: 800&#125; ], color: '#f6ca29' &#125;</span></span><br><span class="line"><span class="regexp">        ]</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/ 绘制</span></span><br><span class="line"><span class="regexp">        function draw(piece, cxt)&#123;</span></span><br><span class="line"><span class="regexp">            cxt.beginPath()</span></span><br><span class="line"><span class="regexp">            cxt.moveTo(piece.trajectory[0].x, piece.trajectory[0].y)</span></span><br><span class="line"><span class="regexp">            for(var j = 1; j &lt; piece.trajectory.length; j ++)&#123;</span></span><br><span class="line"><span class="regexp">                cxt.lineTo(piece.trajectory[j].x, piece.trajectory[j].y)</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">            cxt.closePath()</span></span><br><span class="line"><span class="regexp">            cxt.fillStyle = piece.color</span></span><br><span class="line"><span class="regexp">            cxt.fill();</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        window.onload = function()&#123;</span></span><br><span class="line"><span class="regexp">            /</span>** @type &#123;HTMLCanvasElement&#125; *<span class="regexp">/ </span></span><br><span class="line"><span class="regexp">            var canvas = document.getElementById('canvas'),</span></span><br><span class="line"><span class="regexp">                context = canvas.getContext('2d')</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 画布宽高</span></span><br><span class="line"><span class="regexp">            canvas.width = 800</span></span><br><span class="line"><span class="regexp">            canvas.height = 800</span></span><br><span class="line"><span class="regexp">            for(var i = 0; i &lt; tangram.length; i ++)&#123;</span></span><br><span class="line"><span class="regexp">                draw(tangram[i], context)</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="画一个圆弧"><a href="#画一个圆弧" class="headerlink" title="画一个圆弧"></a>画一个圆弧</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//x:圆的中心的 x 坐标</span></span><br><span class="line"><span class="comment">//y:圆的中心的 y 坐标</span></span><br><span class="line"><span class="comment">//r:圆的半径</span></span><br><span class="line"><span class="comment">//sAngle:起始角，以弧度计。（弧的圆形的三点钟位置是 0 度）</span></span><br><span class="line"><span class="comment">//eAngle:结束角，以弧度计</span></span><br><span class="line"><span class="comment">//counterclockwise:可选。规定应该逆时针还是顺时针绘图。False = 顺时针，true = 逆时针。默认顺时针</span></span><br><span class="line">context.arc(x,y,r,sAngle,eAngle,counterclockwise);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>画一个圆弧</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">context.beginPath()</span><br><span class="line">context.arc(<span class="number">400</span>, <span class="number">400</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">1.5</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span><br><span class="line">context.closePath()</span><br><span class="line">context.stroke()</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果不想封闭，删除context.closePath()即可</p>
</blockquote>
<h3 id="画一个圆"><a href="#画一个圆" class="headerlink" title="画一个圆"></a>画一个圆</h3><blockquote>
<p>弧度从0到2π即可</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">context.beginPath()</span><br><span class="line">context.arc(<span class="number">400</span>, <span class="number">400</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">2</span>*<span class="built_in">Math</span>.PI, <span class="literal">false</span>)</span><br><span class="line">context.stroke()</span><br></pre></td></tr></table></figure>

<h3 id="小球落体运动"><a href="#小球落体运动" class="headerlink" title="小球落体运动"></a>小球落体运动</h3><h4 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h4><blockquote>
<p>注意：测试时最好注释render()中的第一行代码 <code>cxt.clearRect(0, 0, WIDTH, HEIGHT)</code> ，这样可以显示出运动轨迹。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>ball-fall<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"border: 2px solid #ccc; display: block; margin: 20px auto 0;"</span>&gt;</span></span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> ball = &#123;x: <span class="number">900</span>, y: <span class="number">200</span>, vx: <span class="number">-4</span>, vy: <span class="number">0</span>, g: <span class="number">1.5</span>&#125;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> WIDTH = <span class="number">1000</span>, HEIGHT = <span class="number">700</span>, RIDIUS = <span class="number">15</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">/** @type &#123;HTMLCanvasElement&#125; */</span> </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>),</span></span><br><span class="line"><span class="actionscript">                context = canvas.getContext(<span class="string">'2d'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 画布宽高</span></span></span><br><span class="line">            canvas.width = WIDTH</span><br><span class="line">            canvas.height = HEIGHT</span><br><span class="line"><span class="actionscript">            setInterval(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">                render(context)</span><br><span class="line">                update()</span><br><span class="line">            &#125;, 50)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(cxt)</span></span>&#123;</span></span><br><span class="line">            cxt.clearRect(0, 0, WIDTH, HEIGHT)</span><br><span class="line">            cxt.beginPath()</span><br><span class="line"><span class="javascript">            cxt.arc(ball.x, ball.y, RIDIUS, <span class="number">0</span>, <span class="number">2</span>*<span class="built_in">Math</span>.PI)</span></span><br><span class="line">            cxt.closePath()</span><br><span class="line"><span class="actionscript">            cxt.fillStyle = <span class="string">'#f0f'</span></span></span><br><span class="line">            cxt.fill();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">            ball.x += ball.vx</span><br><span class="line">            ball.y += ball.vy</span><br><span class="line">            if(ball.y &gt;= HEIGHT-RIDIUS)&#123;</span><br><span class="line">                ball.y = HEIGHT-RIDIUS</span><br><span class="line">                ball.vy = -ball.vy*0.7</span><br><span class="line"><span class="actionscript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">                ball.vy += ball.g</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码中首先定义了小球的基本属性：横坐标，纵坐标，水平速度，垂直速度，加速度</p>
<p>update()中用到了一个摩擦系数为0.7</p>
</blockquote>
<h4 id="update"><a href="#update" class="headerlink" title="update()"></a>update()</h4><blockquote>
<p>这里的重点是update函数部分，为什么会这样写？示例代码用到了摩擦系数0.7，运动轨迹看起来差别不大。如果没有摩擦，观察下面几种写法有什么不同。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 方法一</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  ball.x += ball.vx</span><br><span class="line">  ball.y += ball.vy</span><br><span class="line">  ball.vy += ball.g</span><br><span class="line">  <span class="keyword">if</span>(ball.y &gt;= HEIGHT-RIDIUS)&#123;</span><br><span class="line">    ball.y = HEIGHT-RIDIUS</span><br><span class="line">    ball.vy = -ball.vy</span><br><span class="line">    <span class="comment">// 测试打印出最大垂直速度</span></span><br><span class="line">    <span class="built_in">console</span>.log(ball.vy)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 方法二</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  ball.x += ball.vx</span><br><span class="line">  ball.y += ball.vy</span><br><span class="line">  <span class="keyword">if</span>(ball.y &gt;= HEIGHT-RIDIUS)&#123;</span><br><span class="line">    ball.y = HEIGHT-RIDIUS</span><br><span class="line">    ball.vy = -ball.vy</span><br><span class="line">    <span class="comment">// 测试打印出最大垂直速度</span></span><br><span class="line">    <span class="built_in">console</span>.log(ball.vy)</span><br><span class="line">  &#125;</span><br><span class="line">  ball.vy += ball.g</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 方法三</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  ball.x += ball.vx</span><br><span class="line">  ball.y += ball.vy</span><br><span class="line">  <span class="keyword">if</span>(ball.y &gt;= HEIGHT-RIDIUS)&#123;</span><br><span class="line">    ball.y = HEIGHT-RIDIUS</span><br><span class="line">    ball.vy = -ball.vy</span><br><span class="line">    <span class="comment">// 测试打印出最大垂直速度</span></span><br><span class="line">    <span class="built_in">console</span>.log(ball.vy)</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    ball.vy += ball.g</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这几种方法都没有摩擦系数，仅仅只是 <code>ball.vy += ball.g</code> 的位置不同而已，经过测试你会发现：方法一弹跳后最高点会越来越高，方法二弹跳后最高点会越来越低，而方法三则都在同一最高点。通过打印出的最大垂直速度不难发现，方法一造成的原因是每次小球落到最低点都多加了一次 <code>ball.g</code> ，方法二同理。方法三是在水平线以上才会累加垂直速度。</p>
</blockquote>
<h4 id="上抛效果"><a href="#上抛效果" class="headerlink" title="上抛效果"></a>上抛效果</h4><blockquote>
<p>其实上抛效果很简单，只需要将 <code>ball.vy</code> 的初始值设置为负值即可，这里需要注意 <code>ball.vy</code> 的值尽量按照加速度的值来设定，最好是加速度的倍数，这样能够保证最高点的垂直速度为0，运动轨迹都有统一的焦点。</p>
<p>这里还有一个问题：设置过上抛效果后，第一个最高点可能和之后的最高点不同，造成这个原因是因为小球落到最低处时的位置不一定刚好等于<code>HEIGHT-RIDIUS</code>，示例代码中是强制不让小球出界。如下</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(ball.y &gt;= HEIGHT-RIDIUS)&#123;</span><br><span class="line">   ball.y = HEIGHT-RIDIUS</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>如果注释<code>ball.y = HEIGHT-RIDIUS</code>这行代码你会发现路径的最高点都一样了。</p>
<p>这里最简单的解决方法就是调整ball的初始位置，使其下落到最低点时刚好是边界的高度，即<code>ball.y == HEIGHT-RIDIUS</code></p>
</blockquote>
<h3 id="动态粒子时钟效果"><a href="#动态粒子时钟效果" class="headerlink" title="动态粒子时钟效果"></a>动态粒子时钟效果</h3><blockquote>
<p>参考代码 <a href="http://lwlblog.top/demo/canvas-clock/index.html">演示</a> ，<a href="http://lwlblog.top/demo/canvas-clock/digit.js">digit.js文件地址</a></p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>canvas-clock<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        * &#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>;&#125;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"display: block;background-color: black;"</span>&gt;</span>当前浏览器不支持canvas，请更换浏览器后再试<span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> WIDTH, HEIGHT, LEFT, TOP, RADIUS, timeSeconds, balls = [], timer</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">/** @type &#123;HTMLCanvasElement&#125; */</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>),</span></span><br><span class="line"><span class="actionscript">                context = canvas.getContext(<span class="string">'2d'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 自适应窗口大小</span></span></span><br><span class="line"><span class="javascript">            WIDTH = <span class="built_in">document</span>.documentElement.clientWidth</span></span><br><span class="line"><span class="javascript">            HEIGHT = <span class="built_in">document</span>.documentElement.clientHeight</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 边距（先计算RADIUS）</span></span></span><br><span class="line"><span class="javascript">            RADIUS = <span class="built_in">Math</span>.round(WIDTH / <span class="number">170</span>)</span></span><br><span class="line"><span class="javascript">            LEFT = <span class="built_in">Math</span>.round((WIDTH - <span class="number">107</span> * RADIUS) / <span class="number">2</span>)</span></span><br><span class="line"><span class="javascript">            TOP = <span class="built_in">Math</span>.round((HEIGHT - <span class="number">20</span> * RADIUS) / <span class="number">3</span>)</span></span><br><span class="line">            timeSeconds = getTime()</span><br><span class="line"><span class="actionscript">            <span class="comment">// 画布宽高</span></span></span><br><span class="line">            canvas.width = WIDTH</span><br><span class="line">            canvas.height = HEIGHT</span><br><span class="line">            animation(context)</span><br><span class="line"><span class="actionscript">            <span class="comment">// 监听当前页面是否被隐藏</span></span></span><br><span class="line"><span class="javascript">            <span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">document</span>.visibilityState == <span class="string">'hidden'</span>) &#123;</span></span><br><span class="line">                    clearInterval(timer)</span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.visibilityState == <span class="string">'visible'</span>) &#123;</span></span><br><span class="line">                    animation(context)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 小球下落动画</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">animation</span><span class="params">(context)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            timer = setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                render(context)</span><br><span class="line">                update()</span><br><span class="line">            &#125;, 50)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 渲染页面</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">(cxt)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> hours = <span class="built_in">parseInt</span>(timeSeconds / <span class="number">3600</span>),</span></span><br><span class="line"><span class="javascript">                minutes = <span class="built_in">parseInt</span>((timeSeconds - hours * <span class="number">3600</span>) / <span class="number">60</span>)</span></span><br><span class="line">            seconds = timeSeconds % 60</span><br><span class="line"><span class="actionscript">            <span class="comment">// 首先清空画布</span></span></span><br><span class="line">            cxt.clearRect(0, 0, WIDTH, HEIGHT)</span><br><span class="line"><span class="javascript">            renderDigit(LEFT, TOP, <span class="built_in">parseInt</span>(hours / <span class="number">10</span>), cxt)</span></span><br><span class="line"><span class="javascript">            renderDigit(LEFT + <span class="number">15</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(hours % <span class="number">10</span>), cxt)</span></span><br><span class="line">            renderDigit(LEFT + 30 * RADIUS, TOP, 10, cxt)</span><br><span class="line"><span class="javascript">            renderDigit(LEFT + <span class="number">39</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(minutes / <span class="number">10</span>), cxt)</span></span><br><span class="line"><span class="javascript">            renderDigit(LEFT + <span class="number">54</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(minutes % <span class="number">10</span>), cxt)</span></span><br><span class="line">            renderDigit(LEFT + 69 * RADIUS, TOP, 10, cxt)</span><br><span class="line"><span class="javascript">            renderDigit(LEFT + <span class="number">78</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(seconds / <span class="number">10</span>), cxt)</span></span><br><span class="line"><span class="javascript">            renderDigit(LEFT + <span class="number">93</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(seconds % <span class="number">10</span>), cxt)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 渲染下落的小球</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; balls.length; i++) &#123;</span></span><br><span class="line">                cxt.fillStyle = balls[i].color</span><br><span class="line">                cxt.beginPath()</span><br><span class="line"><span class="javascript">                cxt.arc(balls[i].x, balls[i].y, RADIUS, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI, <span class="literal">true</span>)</span></span><br><span class="line">                cxt.closePath()</span><br><span class="line">                cxt.fill()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 更新画布</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">var</span> nextTimeSeconds = getTime(),</span></span><br><span class="line"><span class="javascript">                nextHours = <span class="built_in">parseInt</span>(nextTimeSeconds / <span class="number">3600</span>),</span></span><br><span class="line"><span class="javascript">                nextMinutes = <span class="built_in">parseInt</span>((nextTimeSeconds - nextHours * <span class="number">3600</span>) / <span class="number">60</span>),</span></span><br><span class="line">                nextSeconds = nextTimeSeconds % 60,</span><br><span class="line"><span class="javascript">                curHours = <span class="built_in">parseInt</span>(timeSeconds / <span class="number">3600</span>),</span></span><br><span class="line"><span class="javascript">                curMinutes = <span class="built_in">parseInt</span>((timeSeconds - curHours * <span class="number">3600</span>) / <span class="number">60</span>),</span></span><br><span class="line">                curSeconds = timeSeconds % 60</span><br><span class="line">            if (nextSeconds !== curSeconds) &#123;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 判断被改变的数字，判断小球位置</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curHours / <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextHours / <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">0</span>, TOP, <span class="built_in">parseInt</span>(curHours / <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curHours % <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextHours % <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">15</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(curHours / <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curMinutes / <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextMinutes / <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">39</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(curMinutes / <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curMinutes % <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextMinutes % <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">54</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(curMinutes % <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curSeconds / <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextSeconds / <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">78</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(curSeconds / <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">parseInt</span>(curSeconds % <span class="number">10</span>) != <span class="built_in">parseInt</span>(nextSeconds % <span class="number">10</span>)) &#123;</span></span><br><span class="line"><span class="javascript">                    addBalls(LEFT + <span class="number">93</span> * RADIUS, TOP, <span class="built_in">parseInt</span>(nextSeconds % <span class="number">10</span>))</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">                <span class="comment">// 同步显示时间</span></span></span><br><span class="line">                timeSeconds = nextTimeSeconds</span><br><span class="line">            &#125;</span><br><span class="line">            updateBalls()</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 按照数字添加小球个数</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">addBalls</span><span class="params">(x, y, num)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; digit[num].length; i++)&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; digit[num][i].length; j++)&#123;</span></span><br><span class="line">                    if (digit[num][i][j] == 1) &#123;</span><br><span class="line"><span class="actionscript">                        <span class="keyword">var</span> aBall = &#123;</span></span><br><span class="line">                            x: x + j * 2 * RADIUS + RADIUS,</span><br><span class="line">                            y: y + i * 2 * RADIUS + RADIUS,</span><br><span class="line"><span class="javascript">                            g: <span class="number">1.5</span> + <span class="built_in">Math</span>.random(),</span></span><br><span class="line"><span class="javascript">                            vx: <span class="built_in">Math</span>.pow(<span class="number">-1</span>, <span class="built_in">Math</span>.ceil(<span class="built_in">Math</span>.random() * <span class="number">1000</span>)) * <span class="number">4</span>,</span></span><br><span class="line">                            vy: -5,</span><br><span class="line">                            color: getRandomColor()</span><br><span class="line">                        &#125;</span><br><span class="line">                        balls.push(aBall)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 更新下落小球的位置</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">updateBalls</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; balls.length; i++) &#123;</span></span><br><span class="line">                balls[i].x += balls[i].vx</span><br><span class="line">                balls[i].y += balls[i].vy</span><br><span class="line"><span class="actionscript">                <span class="comment">// 反弹效果</span></span></span><br><span class="line">                if (balls[i].y &gt;= HEIGHT - RADIUS) &#123;</span><br><span class="line">                    balls[i].y = HEIGHT - RADIUS</span><br><span class="line"><span class="javascript">                    balls[i].vy = - <span class="built_in">Math</span>.abs(balls[i].vy) * <span class="number">0.75</span></span></span><br><span class="line"><span class="actionscript">                &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line">                	balls[i].vy += balls[i].g</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">// 删除超出界面外的小球</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; balls.length; i++) &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">                if (balls[i].x + RADIUS <span class="tag">&lt; <span class="attr">0</span> || <span class="attr">balls</span>[<span class="attr">i</span>]<span class="attr">.x</span> <span class="attr">-</span> <span class="attr">RADIUS</span> &gt;</span> WIDTH) &#123;</span></span></span><br><span class="line">                    balls.splice(i, 1)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取时间</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getTime</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> curTime = <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> curTime.getHours() * <span class="number">3600</span> + curTime.getMinutes() * <span class="number">60</span> + curTime.getSeconds()</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 渲染数字</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">renderDigit</span><span class="params">(x, y, num, cxt)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            cxt.fillStyle = <span class="string">"rgb(0,102,153)"</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; digit[num].length; i++) &#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; digit[num][i].length; j++) &#123;</span></span><br><span class="line">                    if (digit[num][i][j] == 1) &#123;</span><br><span class="line">                        cxt.beginPath()</span><br><span class="line"><span class="javascript">                        cxt.arc(x + j * <span class="number">2</span> * RADIUS + RADIUS, y + i * <span class="number">2</span> * RADIUS + RADIUS, RADIUS, <span class="number">0</span>, <span class="number">2</span> * <span class="built_in">Math</span>.PI)</span></span><br><span class="line">                        cxt.closePath()</span><br><span class="line">                        cxt.fill()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 获取随机颜色</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">getRandomColor</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="string">'#'</span> +</span></span><br><span class="line"><span class="actionscript">                (<span class="function"><span class="keyword">function</span> <span class="params">(color)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> (color += <span class="string">'5678956789defdef'</span>[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">16</span>)]) &amp;&amp;</span></span><br><span class="line"><span class="javascript">                        (color.length == <span class="number">6</span>) ? color : <span class="built_in">arguments</span>.callee(color)</span></span><br><span class="line"><span class="actionscript">                &#125;)(<span class="string">''</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./digit.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="画一个矩形"><a href="#画一个矩形" class="headerlink" title="画一个矩形"></a>画一个矩形</h3><blockquote>
<p>通过上面的方法，已经可以用线条画出一个封闭矩形，除此之外canvas还为我们提供了直接绘制矩形的方法。调用即可</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">context.rect(x,y,width,height)</span><br><span class="line">context.fillRect(x,y,width,height)</span><br><span class="line">context.strokeRect(x,y,width,height)</span><br></pre></td></tr></table></figure>

<h3 id="画一个五角星"><a href="#画一个五角星" class="headerlink" title="画一个五角星"></a>画一个五角星</h3><blockquote>
<p>参考代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>start<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"border: 2px solid #ccc; display: block; margin: 20px auto 0;"</span>&gt;</span></span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">/** @type &#123;HTMLCanvasElement&#125; */</span> </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>),</span></span><br><span class="line"><span class="actionscript">                context = canvas.getContext(<span class="string">'2d'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 画布宽高</span></span></span><br><span class="line">            canvas.width = 800</span><br><span class="line">            canvas.height = 700</span><br><span class="line"></span><br><span class="line">            context.lineWidth = 10</span><br><span class="line">            drawStart(context, 150, 300, 400, 400)</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="comment">// 小圆半径，大圆半径，x，y坐标，顺时针旋转角度（默认0）</span></span></span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drawStart</span><span class="params">(cxt, r, R, x, y, rot = 0)</span></span>&#123;</span></span><br><span class="line">            cxt.beginPath()</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++)&#123;</span></span><br><span class="line"><span class="javascript">                cxt.lineTo(<span class="built_in">Math</span>.cos((<span class="number">18</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * R + x, </span></span><br><span class="line"><span class="javascript">                           -<span class="built_in">Math</span>.sin((<span class="number">18</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * R + y)</span></span><br><span class="line"><span class="javascript">                cxt.lineTo(<span class="built_in">Math</span>.cos((<span class="number">54</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * r + x, </span></span><br><span class="line"><span class="javascript">                           -<span class="built_in">Math</span>.sin((<span class="number">54</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * r + y)</span></span><br><span class="line">            &#125;</span><br><span class="line">            cxt.closePath()</span><br><span class="line">            cxt.stroke()</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>思路：五角星的五个内顶点在小圆上，外顶点在大圆上。以圆心为坐标原点，五角星上顶点在y轴，建立坐标系，注意canvas中y轴方向向下。五角星中每个顶点坐标相差72度，简单计算即可得到五角星各个顶点的位置。</p>
</blockquote>
<h4 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h4><p><img src="http://lwlblog.top/images/demo/canvas-start.png" alt="图示"></p>
<h3 id="星空效果"><a href="#星空效果" class="headerlink" title="星空效果"></a>星空效果</h3><blockquote>
<p>参考代码</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>starts<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css">*&#123;<span class="attribute">margin</span>: <span class="number">0</span>; <span class="attribute">padding</span>: <span class="number">0</span>;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"display: block; background-color: black;"</span>&gt;</span></span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> WIDTH, HEIGHT </span></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">/** @type &#123;HTMLCanvasElement&#125; */</span> </span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'canvas'</span>),</span></span><br><span class="line"><span class="actionscript">                context = canvas.getContext(<span class="string">'2d'</span>)</span></span><br><span class="line"><span class="actionscript">            <span class="comment">// 画布宽高</span></span></span><br><span class="line"><span class="javascript">            WIDTH = <span class="built_in">document</span>.documentElement.clientWidth</span></span><br><span class="line"><span class="javascript">            HEIGHT = <span class="built_in">document</span>.documentElement.clientHeight</span></span><br><span class="line">            canvas.width = WIDTH</span><br><span class="line">            canvas.height = HEIGHT</span><br><span class="line"></span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i ++)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> r = <span class="built_in">Math</span>.random()*<span class="number">10</span> + <span class="number">10</span>,</span></span><br><span class="line"><span class="javascript">                    x = <span class="built_in">Math</span>.random()*(WIDTH - <span class="number">2</span>*r) + r,</span></span><br><span class="line"><span class="javascript">                    y = <span class="built_in">Math</span>.random()*(HEIGHT - <span class="number">2</span>*r) + r,</span></span><br><span class="line"><span class="javascript">                    a = <span class="built_in">Math</span>.random()*<span class="number">360</span></span></span><br><span class="line">                drawStart(context, x, y, r/2, r, a)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        <span class="function"><span class="keyword">function</span> <span class="title">drawStart</span><span class="params">(cxt, x, y, r, R, rot = 0)</span></span>&#123;</span></span><br><span class="line">            cxt.beginPath()</span><br><span class="line"><span class="actionscript">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i ++)&#123;</span></span><br><span class="line"><span class="javascript">                cxt.lineTo(<span class="built_in">Math</span>.cos((<span class="number">18</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * R + x,</span></span><br><span class="line"><span class="javascript">                           -<span class="built_in">Math</span>.sin((<span class="number">18</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * R + y)</span></span><br><span class="line"><span class="javascript">                cxt.lineTo(<span class="built_in">Math</span>.cos((<span class="number">54</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * r + x, </span></span><br><span class="line"><span class="javascript">                           -<span class="built_in">Math</span>.sin((<span class="number">54</span> + i*<span class="number">72</span> - rot)/<span class="number">180</span> * <span class="built_in">Math</span>.PI) * r + y)</span></span><br><span class="line">            &#125;</span><br><span class="line">            cxt.closePath()</span><br><span class="line"><span class="actionscript">            cxt.fillStyle = <span class="string">'yellow'</span></span></span><br><span class="line">            cxt.fill()</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><blockquote>
<p>示例代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh_CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;linear-gradient&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;canvas id=<span class="string">"canvas"</span> style=<span class="string">"display: block; border: 2px solid #ccc; margin: 30px auto 0;"</span>&gt;</span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    &lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function () &#123;</span></span><br><span class="line"><span class="regexp">            /</span>** @type &#123;HTMLCanvasElement&#125; *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            var canvas = document.getElementById('canvas'),</span></span><br><span class="line"><span class="regexp">                context = canvas.getContext('2d')</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 画布宽高</span></span><br><span class="line"><span class="regexp">            canvas.width = 700</span></span><br><span class="line"><span class="regexp">            canvas.height = 700</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            var linearGrad = context.createLinearGradient(0, 0, 700, 700)</span></span><br><span class="line"><span class="regexp">            linearGrad.addColorStop(0.0, 'red')</span></span><br><span class="line"><span class="regexp">            linearGrad.addColorStop(0.25, 'yellow')</span></span><br><span class="line"><span class="regexp">            linearGrad.addColorStop(0.5, 'green')</span></span><br><span class="line"><span class="regexp">            linearGrad.addColorStop(0.75, 'blue')</span></span><br><span class="line"><span class="regexp">            linearGrad.addColorStop(1.0, 'coral')</span></span><br><span class="line"><span class="regexp">            context.fillStyle = linearGrad</span></span><br><span class="line"><span class="regexp">            context.fillRect(0, 0, 700, 700)</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h3><blockquote>
<p>示例代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh_CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;radial-gradient&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;canvas id=<span class="string">"canvas"</span> style=<span class="string">"display: block; border: 2px solid #ccc; margin: 30px auto 0;"</span>&gt;</span><br><span class="line">        当前浏览器不支持canvas，请更换浏览器后再试</span><br><span class="line">    &lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script&gt;</span></span><br><span class="line"><span class="regexp">        window.onload = function () &#123;</span></span><br><span class="line"><span class="regexp">            /</span>** @type &#123;HTMLCanvasElement&#125; *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">            var canvas = document.getElementById('canvas'),</span></span><br><span class="line"><span class="regexp">                context = canvas.getContext('2d')</span></span><br><span class="line"><span class="regexp">            /</span><span class="regexp">/ 画布宽高</span></span><br><span class="line"><span class="regexp">            canvas.width = 700</span></span><br><span class="line"><span class="regexp">            canvas.height = 700</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">            var radialGrad = context.createRadialGradient(350, 350, 0, 350, 350, 400)</span></span><br><span class="line"><span class="regexp">            radialGrad.addColorStop(0.0, 'red')</span></span><br><span class="line"><span class="regexp">            radialGrad.addColorStop(0.25, 'yellow')</span></span><br><span class="line"><span class="regexp">            radialGrad.addColorStop(0.5, 'green')</span></span><br><span class="line"><span class="regexp">            radialGrad.addColorStop(0.75, 'blue')</span></span><br><span class="line"><span class="regexp">            radialGrad.addColorStop(1.0, 'coral')</span></span><br><span class="line"><span class="regexp">            context.fillStyle = radialGrad</span></span><br><span class="line"><span class="regexp">            context.fillRect(0, 0, 700, 700)</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>script&gt;</span><br><span class="line">&lt;<span class="regexp">/body&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>html&gt;</span><br></pre></td></tr></table></figure>

<h3 id="使用图片、画布、或者video"><a href="#使用图片、画布、或者video" class="headerlink" title="使用图片、画布、或者video"></a>使用图片、画布、或者video</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">createPattern(img, repeat-style)</span><br><span class="line">createPattern(canvas, repeat-style)</span><br><span class="line">createPattern(video, repeat-style)</span><br><span class="line"><span class="comment">// repeat-style: no-repeat</span></span><br><span class="line"><span class="comment">// 				repeat-x</span></span><br><span class="line"><span class="comment">// 				repeat-x</span></span><br><span class="line"><span class="comment">// 				repeat-y</span></span><br><span class="line"><span class="comment">// 				repeat</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>canvas</category>
      </categories>
      <tags>
        <tag>javascript</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript-自适应轮播图</title>
    <url>/2019/11/26/JavaScript-%E8%87%AA%E9%80%82%E5%BA%94%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
    <content><![CDATA[<p>摘要：原生JavaScript通过改变类名实现轮播图效果</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><blockquote>
<p>话不多说，先上代码，方便复制粘贴。<a href="/demo/swiper/index.html">演示</a></p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;轮播图&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;style&gt;</span></span><br><span class="line"><span class="regexp">        *&#123;</span></span><br><span class="line"><span class="regexp">            margin: 0;</span></span><br><span class="line"><span class="regexp">            padding: 0;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        ul&#123;</span></span><br><span class="line"><span class="regexp">            list-style: none;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        img&#123;</span></span><br><span class="line"><span class="regexp">            display: block;</span></span><br><span class="line"><span class="regexp">            width: 100%;</span></span><br><span class="line"><span class="regexp">            height: 100%;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .content&#123;</span></span><br><span class="line"><span class="regexp">            width: 1080px;</span></span><br><span class="line"><span class="regexp">            margin: 100px auto;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .banner&#123;</span></span><br><span class="line"><span class="regexp">            position: relative;</span></span><br><span class="line"><span class="regexp">            overflow: hidden;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .banner&gt;div&#123;</span></span><br><span class="line"><span class="regexp">            width: 790px;</span></span><br><span class="line"><span class="regexp">            position: absolute;</span></span><br><span class="line"><span class="regexp">            transform: translateX(140px) scale(0.8);</span></span><br><span class="line"><span class="regexp">            transform-origin: center bottom;</span></span><br><span class="line"><span class="regexp">            transition: .4s;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .banner .first_item&#123;</span></span><br><span class="line"><span class="regexp">            z-index: 10;</span></span><br><span class="line"><span class="regexp">            transform: translateX(140px) scale(1);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .banner .second_item&#123;</span></span><br><span class="line"><span class="regexp">            z-index: 1;</span></span><br><span class="line"><span class="regexp">            transform: translateX(540px) scale(0.8);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .banner .last_item&#123;</span></span><br><span class="line"><span class="regexp">            z-index: 1;</span></span><br><span class="line"><span class="regexp">            transform: translateX(-250px) scale(0.8);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        /</span>* 左右切换按钮 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        .btn&#123;</span></span><br><span class="line"><span class="regexp">            width: 40px;</span></span><br><span class="line"><span class="regexp">            height: 40px;</span></span><br><span class="line"><span class="regexp">            position: absolute;</span></span><br><span class="line"><span class="regexp">            top: 60%;</span></span><br><span class="line"><span class="regexp">            margin-top: -20px;</span></span><br><span class="line"><span class="regexp">            background-color: rgba(0, 0, 0, 0.2);</span></span><br><span class="line"><span class="regexp">            z-index: 1;</span></span><br><span class="line"><span class="regexp">            text-align: center;</span></span><br><span class="line"><span class="regexp">            color: rgba(255, 255, 255, 0.6);</span></span><br><span class="line"><span class="regexp">            line-height: 40px;</span></span><br><span class="line"><span class="regexp">            font-size: 20px;</span></span><br><span class="line"><span class="regexp">            font-style: normal;</span></span><br><span class="line"><span class="regexp">            cursor: pointer;</span></span><br><span class="line"><span class="regexp">            user-select: none;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .btn_right&#123;</span></span><br><span class="line"><span class="regexp">            right: 0;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .btn:hover&#123;</span></span><br><span class="line"><span class="regexp">            background-color: rgba(0, 0, 0, 0.4);</span></span><br><span class="line"><span class="regexp">            color: rgba(255, 255, 255, 1);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        /</span>* banner状态点 *<span class="regexp">/</span></span><br><span class="line"><span class="regexp">        .track&#123;</span></span><br><span class="line"><span class="regexp">            display: flex;</span></span><br><span class="line"><span class="regexp">            justify-content: center;</span></span><br><span class="line"><span class="regexp">            overflow: hidden;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .track&gt;span&#123;</span></span><br><span class="line"><span class="regexp">            display: block;</span></span><br><span class="line"><span class="regexp">            width: 25px;</span></span><br><span class="line"><span class="regexp">            height: 4px;</span></span><br><span class="line"><span class="regexp">            background-color: #ccc;</span></span><br><span class="line"><span class="regexp">            float: left;</span></span><br><span class="line"><span class="regexp">            margin: 10px 6px;</span></span><br><span class="line"><span class="regexp">            transition: .4s;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        .track .focus&#123;</span></span><br><span class="line"><span class="regexp">            background-color: #c60023;</span></span><br><span class="line"><span class="regexp">            transform: scale(1.2);</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>style&gt;</span><br><span class="line">&lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">&lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="content"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="banner"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="first_item"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;a href="#"&gt;&lt;img src="img/</span>banner/banner1.jpg<span class="string">" alt="</span><span class="string">"&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>second_item<span class="string">"&gt;</span></span><br><span class="line">                &lt;a href="#"&gt;&lt;img src="img/banner/banner2.jpg" alt=""&gt;&lt;/a&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class=""&gt;</span></span><br><span class="line"><span class="regexp">                &lt;a href="#"&gt;&lt;img src="img/</span>banner/banner3.jpg<span class="string">" alt="</span><span class="string">"&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span><span class="string">"&gt;</span></span><br><span class="line">                &lt;a href="#"&gt;&lt;img src="img/banner/banner4.jpg" alt=""&gt;&lt;/a&gt;</span><br><span class="line">            &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="last_item"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;a href="#"&gt;&lt;img src="img/</span>banner/banner5.jpg<span class="string">" alt="</span><span class="string">"&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;!-- 这里切换按钮用大于小于号代替，如果自己有icon图标自行替换 --&gt;</span></span><br><span class="line"><span class="string">            &lt;i class="</span>btn_left btn<span class="string">"&gt;&lt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">            &lt;i class="</span>btn_right btn<span class="string">"&gt;&gt;&lt;/i&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;div class="</span>track<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">        window.onload = function()&#123;</span></span><br><span class="line"><span class="string">            // 获取节点，变量声明</span></span><br><span class="line"><span class="string">            var banner      = document.querySelector('.banner'),</span></span><br><span class="line"><span class="string">                btn_left    = document.querySelector('.btn_left'),</span></span><br><span class="line"><span class="string">                btn_right   = document.querySelector('.btn_right'),</span></span><br><span class="line"><span class="string">                track       = document.querySelector('.track'),</span></span><br><span class="line"><span class="string">                list_items  = banner.querySelectorAll('div'),</span></span><br><span class="line"><span class="string">                listArr     = [],</span></span><br><span class="line"><span class="string">                index       = 0,</span></span><br><span class="line"><span class="string">                trackHtml   = '',</span></span><br><span class="line"><span class="string">                tracks,</span></span><br><span class="line"><span class="string">                timer;</span></span><br><span class="line"><span class="string">            // 初始化</span></span><br><span class="line"><span class="string">            function init()&#123;</span></span><br><span class="line"><span class="string">                // 根据图片高度自适应</span></span><br><span class="line"><span class="string">                banner.style.height = list_items[0].offsetHeight + 'px';</span></span><br><span class="line"><span class="string">                // 生成track坐标点元素</span></span><br><span class="line"><span class="string">                for(var i = 0, len = list_items.length; i &lt; len; i ++)&#123;</span></span><br><span class="line"><span class="string">                    listArr.push(list_items[i].className)</span></span><br><span class="line"><span class="string">                    trackHtml += '&lt;span&gt;&lt;/span&gt;'</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                track.innerHTML = trackHtml;</span></span><br><span class="line"><span class="string">                // 获取坐标点元素</span></span><br><span class="line"><span class="string">                tracks = track.querySelectorAll('span');</span></span><br><span class="line"><span class="string">                tracks[0].setAttribute('class', 'focus');</span></span><br><span class="line"><span class="string">                play();</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            // 切换动画 target=1 下一张 target=-1 上一张</span></span><br><span class="line"><span class="string">            function move(target)&#123;</span></span><br><span class="line"><span class="string">                list_items.forEach((item, i) =&gt; &#123;</span></span><br><span class="line"><span class="string">                    item.setAttribute('class', listArr[i])</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">                // 计算index下标值</span></span><br><span class="line"><span class="string">                index = (index + listArr.length + target) % listArr.length;</span></span><br><span class="line"><span class="string">                tracks.forEach((item, i) =&gt; &#123;</span></span><br><span class="line"><span class="string">                    item.setAttribute('class', '')</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">                tracks[index].setAttribute('class', 'focus')</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            // 下一张</span></span><br><span class="line"><span class="string">            function next()&#123;</span></span><br><span class="line"><span class="string">                listArr.unshift(listArr[listArr.length - 1]);</span></span><br><span class="line"><span class="string">			   listArr.pop();</span></span><br><span class="line"><span class="string">                move(1)</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            // 上一张</span></span><br><span class="line"><span class="string">            function previous()&#123;</span></span><br><span class="line"><span class="string">                listArr.push(listArr[0]);</span></span><br><span class="line"><span class="string">			   listArr.shift();</span></span><br><span class="line"><span class="string">              	move(-1)</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            // 自动轮播</span></span><br><span class="line"><span class="string">            function play()&#123;</span></span><br><span class="line"><span class="string">            	timer = setInterval(next, 4000);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">            // 下一张绑定点击事件</span></span><br><span class="line"><span class="string">            btn_right.onclick = function()&#123;</span></span><br><span class="line"><span class="string">                clearInterval(timer);</span></span><br><span class="line"><span class="string">                next();</span></span><br><span class="line"><span class="string">                play();</span></span><br><span class="line"><span class="string">            &#125;;</span></span><br><span class="line"><span class="string">            // 上一张绑定点击事件</span></span><br><span class="line"><span class="string">            btn_left.onclick = function()&#123;</span></span><br><span class="line"><span class="string">                clearInterval(timer);</span></span><br><span class="line"><span class="string">                previous();</span></span><br><span class="line"><span class="string">                play();</span></span><br><span class="line"><span class="string">            &#125;;</span></span><br><span class="line"><span class="string">            // track绑定点击事件</span></span><br><span class="line"><span class="string">            track.addEventListener('click', function(e)&#123;</span></span><br><span class="line"><span class="string">                var e = e || window.e,</span></span><br><span class="line"><span class="string">                    //标准浏览器用ev.target，IE浏览器用event.srcElement</span></span><br><span class="line"><span class="string">                    target = e.target || e.srcElement,</span></span><br><span class="line"><span class="string">                    n = 0;</span></span><br><span class="line"><span class="string">                if(target.className !== 'track')&#123;</span></span><br><span class="line"><span class="string">                    clearInterval(timer);</span></span><br><span class="line"><span class="string">                    for(var i = 0, len = tracks.length; i &lt; len; i ++)&#123;</span></span><br><span class="line"><span class="string">                        tracks[i].setAttribute('class', '')</span></span><br><span class="line"><span class="string">                        if(tracks[i] === target)&#123;</span></span><br><span class="line"><span class="string">                            n = i;</span></span><br><span class="line"><span class="string">                            tracks[i].setAttribute('class', 'focus');</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    // 向右滑动</span></span><br><span class="line"><span class="string">                    if(n-index &gt;= 0)&#123;</span></span><br><span class="line"><span class="string">                        for(var i = 0; i &lt; n-index; i ++)&#123;</span></span><br><span class="line"><span class="string">                            setTimeout(next, 160*i);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    // 向左滑动</span></span><br><span class="line"><span class="string">                    else&#123;</span></span><br><span class="line"><span class="string">                        for(var i = 0; i &lt; index-n; i ++)&#123;</span></span><br><span class="line"><span class="string">                            setTimeout(previous, 160*i);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                    play();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;)</span></span><br><span class="line"><span class="string">            init();</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>这里是我按照自己的想法写的一个原生javascript轮播图，给初学者提供一个思路。写轮播图的方法有很多，这里只是其中一种，最重要的还是能学有所得，举一反三。</p>
</blockquote>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><blockquote>
<p>大部分轮播图都是通过banner左右移动的，这里用的是固定css布局，通过改变class来实现轮播的效果。</p>
</blockquote>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote>
<p>本篇文章仅供学习使用，并未做浏览器兼容处理，建议使用谷歌或者第三方最新浏览器，对于IE这个神经病，不用也罢。</p>
</blockquote>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote>
<p>这里简要说明一些问题，其实代码里大部分都注释过了。</p>
<blockquote>
<p>这里的css样式部分，选择器一定要加上<code>.banner</code>，否则会有权重问题导致无法覆盖上面的css样式。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.first_item</span>&#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">140px</span>) <span class="built_in">scale</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.second_item</span>&#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">540px</span>) <span class="built_in">scale</span>(<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.banner</span> <span class="selector-class">.last_item</span>&#123;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-<span class="number">250px</span>) <span class="built_in">scale</span>(<span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>方法一的状态点用的是flex布局做的自适应，也可以使用方法二，但是兼容性貌似还不如方法一，win10自带的浏览器都不支持，索性就用了flex布局。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">//方法一</span><br><span class="line"><span class="selector-class">.track</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line">//方法二</span><br><span class="line"><span class="selector-class">.track</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: fit-content;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>这里注意要保留前两个和最后一个div的class名（也就是<code>first_item</code>、<code>second_item</code>、<code>last_item</code>），中间可以自适应随意添加图片，最少三张。有人可能会有疑惑，为什么不自动生成class名？这样就可以随意添加了，答案是：懒得写了，如果自己感兴趣，可以自己去改造。</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"first_item"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/banner/banner1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"second_item"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/banner/banner2.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/banner/banner3.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/banner/banner4.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"last_item"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/banner/banner5.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>track绑定点击事件函数使用了事件委托，其中的这种切换方式我觉得是最和谐的，也可以用其他的方法。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//向右滑动</span></span><br><span class="line"><span class="keyword">if</span>(n-index &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; n-index; i ++)&#123;</span><br><span class="line">    setTimeout(next, <span class="number">160</span>*i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向左滑动</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; index-n; i ++)&#123;</span><br><span class="line">    setTimeout(previous, <span class="number">160</span>*i);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">play();</span><br></pre></td></tr></table></figure>

</blockquote>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><h4 id="当前页面最小化或后台运行时，轮播动画堆积的问题"><a href="#当前页面最小化或后台运行时，轮播动画堆积的问题" class="headerlink" title="当前页面最小化或后台运行时，轮播动画堆积的问题"></a>当前页面最小化或后台运行时，轮播动画堆积的问题</h4><blockquote>
<p>问题：用 chrome 打开幻灯片正常轮播，最小化窗口，隔一段时间切换回去，轮播一次闪过好多张，<br>怎么实现像 swiper 那样，当最小化窗口时，停止定时器。再次打开，重新接着上次的运动？</p>
<p>init 中加入以下代码</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 监听当前页面是否被隐藏</span></span><br><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.visibilityState == <span class="string">'hidden'</span>) &#123;</span><br><span class="line">    clearInterval(timer);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.visibilityState == <span class="string">'visible'</span>) &#123;</span><br><span class="line">    play();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>demo</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>git</title>
    <url>/2019/10/15/git/</url>
    <content><![CDATA[<p>摘要：git 基本命令 常用命令集合，连接远程仓库</p>
<h2 id="git建立远程仓库连接"><a href="#git建立远程仓库连接" class="headerlink" title="git建立远程仓库连接"></a>git建立远程仓库连接</h2><h3 id="一、码云新建仓库"><a href="#一、码云新建仓库" class="headerlink" title="一、码云新建仓库"></a>一、码云新建仓库</h3><p><a href="https://gitee.com/help/articles/4169" target="_blank" rel="noopener">参考官方教程</a></p>
<h3 id="二、使用git命令推送代码到码云"><a href="#二、使用git命令推送代码到码云" class="headerlink" title="二、使用git命令推送代码到码云"></a>二、使用git命令推送代码到码云</h3><h4 id="git-配置"><a href="#git-配置" class="headerlink" title="git 配置"></a>git 配置</h4><ul>
<li><p>打开Git Bash</p>
</li>
<li><p>配置自己的用户名和邮箱</p>
<blockquote>
<p>git config –global user.name “liwenlong”                //昵称<br>git config –global user.email “<a href="mailto:1519523354@qq.com">1519523354@qq.com</a>“        //邮箱</p>
</blockquote>
</li>
<li><p>生成并部署SSH key公钥</p>
<blockquote>
<p>ssh-keygen -t rsa -C “<a href="mailto:1519523354@qq.com">1519523354@qq.com</a>“</p>
</blockquote>
</li>
<li><p>查看生成的SSH key</p>
<blockquote>
<p>cat ~/.ssh/id_rsa.pub</p>
</blockquote>
</li>
<li><p>本地查看id_rsa.pub文件路径：c:/Users/“用户名”/.ssh/   , 将内容复制到码云添加SSH公钥</p>
</li>
</ul>
<h4 id="git命令行推送项目"><a href="#git命令行推送项目" class="headerlink" title="git命令行推送项目"></a>git命令行推送项目</h4><ul>
<li><p>在要提交的项目文件夹上右键，选择Git Bash Here</p>
</li>
<li><p>初始化git仓库</p>
<blockquote>
<p>git init</p>
</blockquote>
</li>
<li><p>连接远程码云</p>
<blockquote>
<p>git remote add origin <a href="mailto:git@gitee.com">git@gitee.com</a>:lwl213/mmall.git        //项目地址</p>
</blockquote>
</li>
<li><p>查看本地添加了哪些远程地址</p>
<blockquote>
<p>git remote -v</p>
</blockquote>
</li>
<li><p>删除本地指定的远程地址</p>
<blockquote>
<p>git remote remove origin</p>
</blockquote>
</li>
<li><p>远程码云项目中有文件，先拉取代码</p>
<blockquote>
<p>git pull origin master</p>
</blockquote>
</li>
<li><p>推送至码云</p>
<blockquote>
<p>git add .<br>git commit -m ‘注释’<br>git push origin master</p>
</blockquote>
</li>
</ul>
<h2 id="git-命令"><a href="#git-命令" class="headerlink" title="git 命令"></a>git 命令</h2><h3 id="git-常用命令"><a href="#git-常用命令" class="headerlink" title="git 常用命令"></a>git 常用命令</h3><blockquote>
<p><code>git init</code>                        初始化项目</p>
<p><code>git status</code>                        查看当前的状态（未提交的代码）</p>
<p><code>git add .</code>                        提交到暂存区</p>
<p><code>git commit -am &quot;注释&quot;</code>            提交代码</p>
<p><code>git checkout branch</code>                切换分支</p>
<p><code>git checkout -b myProject_v1.0</code>    -b 表示这个分支不存在，会新建 myProject_v1.0 分支并切换到此分支</p>
<p><code>git branch</code>                        显示分支</p>
<p><code>git merge</code>                        分支的合并</p>
<p><code>git pull</code>                        代码拉取</p>
<p><code>git push</code>                        代码提交</p>
<p><code>git clone git地址</code>                克隆代码</p>
<p><code>git remote add origin git地址</code>    把本地文件夹和远程地址对应起来</p>
<p><code>git pull origin master</code>            拉取主分支上的代码</p>
<p><code>git push --set-upstream origin mymall_v1.0</code></p>
<p><code>git merge origin master</code></p>
<p><code>git tag tag-dev-initial</code></p>
<p><code>git push origin tag tag-dev-initial</code></p>
</blockquote>
<h3 id="git-bash-常用命令"><a href="#git-bash-常用命令" class="headerlink" title="git bash 常用命令"></a>git bash 常用命令</h3><blockquote>
<p><code>cd ..</code>                退到上一级目录（注意cd与..之间有空格）</p>
<p><code>pwd</code>                显示当前目录路径</p>
<p><code>ls</code>                    展示文件列表</p>
<p><code>ls -al</code>                展示全部文件列表</p>
<p><code>rm -rf myproject</code>    删除 myproject 文件夹，-r 代表删除这个下面的一切,f 表示不需要用户确认,直接执行</p>
<p><code>mkdir myproject</code>        创建 myproject 文件夹</p>
<p><code>touch text.html</code>        新建 text.html 文件</p>
</blockquote>
]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>css</title>
    <url>/2019/01/30/css/</url>
    <content><![CDATA[<p>摘要：常用css部分内容记录</p>
<h3 id="css-常用部分笔记"><a href="#css-常用部分笔记" class="headerlink" title="css 常用部分笔记"></a>css 常用部分笔记</h3><h4 id="元素"><a href="#元素" class="headerlink" title="元素"></a>元素</h4><table>
<thead>
<tr>
<th align="center"></th>
<th align="center">行级元素</th>
<th align="center">块级元素</th>
<th align="center">行级块元素</th>
</tr>
</thead>
<tbody><tr>
<td align="center">简称</td>
<td align="center">inline</td>
<td align="center">block</td>
<td align="center">inline-block</td>
</tr>
<tr>
<td align="center">标签</td>
<td align="center">span   strong   em   a   del</td>
<td align="center">div   p   ul   li   ol   form   address</td>
<td align="center">img</td>
</tr>
<tr>
<td align="center">特征</td>
<td align="center">内容决定元素所占位置，不可以通过css改变宽高，都有文字特性。</td>
<td align="center">独占一行，可以通过css改变宽高。</td>
<td align="center">内容决定大小，可以改变宽高</td>
</tr>
</tbody></table>
<h4 id="权重"><a href="#权重" class="headerlink" title="权重"></a>权重</h4><blockquote>
<p>选择器优先级 —— 256进制</p>
</blockquote>
<p>!important (正无穷) &gt; 行间样式 (1000) &gt; id (100) &gt; class = 属性 = 伪类 (10) &gt; 标签选择器 = 伪元素 (1) &gt; 通配符 (0)</p>
<h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><h5 id="border-style"><a href="#border-style" class="headerlink" title="border-style"></a>border-style</h5><blockquote>
<p>solid 实心，dotted 点状虚线，dashed 条状虚线  transparent 透明色</p>
</blockquote>
<h5 id="小手"><a href="#小手" class="headerlink" title="小手"></a>小手</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">cursor</span>: <span class="selector-tag">pointer</span>;</span><br></pre></td></tr></table></figure>

<h5 id="禁止选中文本"><a href="#禁止选中文本" class="headerlink" title="禁止选中文本"></a>禁止选中文本</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">user-select</span>: <span class="selector-tag">none</span>;</span><br></pre></td></tr></table></figure>

<h5 id="文本超出单行省略"><a href="#文本超出单行省略" class="headerlink" title="文本超出单行省略"></a>文本超出单行省略</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"><span class="selector-tag">text-overflow</span><span class="selector-pseudo">:ellipsis</span>;</span><br><span class="line"><span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</span><br></pre></td></tr></table></figure>

<h5 id="文本超出两行省略"><a href="#文本超出两行省略" class="headerlink" title="文本超出两行省略"></a>文本超出两行省略</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>;</span><br><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">vertical</span>;</span><br><span class="line"><span class="selector-tag">-webkit-line-clamp</span>: 2;</span><br></pre></td></tr></table></figure>

<h5 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a>使用变量</h5><blockquote>
<p>定义变量（全局css）</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">--themeColor</span>: <span class="selector-id">#eb4450</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>使用变量</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">color</span>: <span class="selector-tag">var</span>(<span class="selector-tag">--themeColor</span>);</span><br></pre></td></tr></table></figure>

<h5 id="计算函数"><a href="#计算函数" class="headerlink" title="计算函数"></a>计算函数</h5><blockquote>
<p>calc() 函数用于动态计算长度值。</p>
</blockquote>
<p><strong>注意：</strong>运算符前后都需要保留一个空格，例如：<code>width: calc(100% - 10px)；</code>，否则不生效。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">width</span>: <span class="selector-tag">calc</span>(100% <span class="selector-tag">-</span> 100<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
</search>
